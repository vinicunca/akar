{
  "props": [
  {
    "name": "as",
    "global": false,
    "description": "The element or component this component should render as.",
    "tags": [
      {
        "name": "defaultValue",
        "text": "'ul'"
      }
    ],
    "required": false,
    "type": "APrimitiveAsTag | Component | undefined",
    "schema": {
      "kind": "enum",
      "type": "APrimitiveAsTag | Component | undefined",
      "schema": {
        "0": "undefined",
        "1": "'a'",
        "2": "'button'",
        "3": "'div'",
        "4": "'form'",
        "5": "'h2'",
        "6": "'h3'",
        "7": "'img'",
        "8": "'input'",
        "9": "'label'",
        "10": "'li'",
        "11": "'nav'",
        "12": "'ol'",
        "13": "'p'",
        "14": "'span'",
        "15": "'svg'",
        "16": "'template'",
        "17": "'ul'",
        "18": {
          "kind": "object",
          "type": "string & {}",
          "schema": {}
        },
        "19": {
          "kind": "object",
          "type": "ComponentOptions<any, any, any, ComputedOptions, MethodOptions, any, any, any, string, {}, {}, string, {}, {}, {}, string, ComponentProvideOptions>",
          "schema": {
            "beforeRouteEnter": {
              "name": "beforeRouteEnter",
              "global": false,
              "description": "Guard called when the router is navigating to the route that is rendering\nthis component from a different route. Differently from `beforeRouteUpdate`\nand `beforeRouteLeave`, `beforeRouteEnter` does not have access to the\ncomponent instance through `this` because it triggers before the component\nis even mounted.",
              "tags": [
                {
                  "name": "param",
                  "text": "to - RouteLocationRaw we are navigating to"
                },
                {
                  "name": "param",
                  "text": "from - RouteLocationRaw we are navigating from"
                },
                {
                  "name": "param",
                  "text": "next - function to validate, cancel or modify (by redirecting) the\nnavigation"
                }
              ],
              "required": false,
              "type": "NavigationGuardWithThis<undefined> | undefined",
              "schema": {
                "kind": "enum",
                "type": "NavigationGuardWithThis<undefined> | undefined",
                "schema": {
                  "0": "undefined",
                  "1": {
                    "kind": "event",
                    "type": "(this: undefined, to: RouteLocationNormalizedGeneric, from: RouteLocationNormalizedLoadedGeneric, next: NavigationGuardNext): _Awaitable<...>",
                    "schema": []
                  }
                }
              }
            },
            "beforeRouteUpdate": {
              "name": "beforeRouteUpdate",
              "global": false,
              "description": "Guard called whenever the route that renders this component has changed, but\nit is reused for the new route. This allows you to guard for changes in\nparams, the query or the hash.",
              "tags": [
                {
                  "name": "param",
                  "text": "to - RouteLocationRaw we are navigating to"
                },
                {
                  "name": "param",
                  "text": "from - RouteLocationRaw we are navigating from"
                },
                {
                  "name": "param",
                  "text": "next - function to validate, cancel or modify (by redirecting) the\nnavigation"
                }
              ],
              "required": false,
              "type": "NavigationGuard | undefined",
              "schema": {
                "kind": "enum",
                "type": "NavigationGuard | undefined",
                "schema": {
                  "0": "undefined",
                  "1": {
                    "kind": "event",
                    "type": "(to: RouteLocationNormalizedGeneric, from: RouteLocationNormalizedLoadedGeneric, next: NavigationGuardNext): _Awaitable<...>",
                    "schema": []
                  }
                }
              }
            },
            "beforeRouteLeave": {
              "name": "beforeRouteLeave",
              "global": false,
              "description": "Guard called when the router is navigating away from the current route that\nis rendering this component.",
              "tags": [
                {
                  "name": "param",
                  "text": "to - RouteLocationRaw we are navigating to"
                },
                {
                  "name": "param",
                  "text": "from - RouteLocationRaw we are navigating from"
                },
                {
                  "name": "param",
                  "text": "next - function to validate, cancel or modify (by redirecting) the\nnavigation"
                }
              ],
              "required": false,
              "type": "NavigationGuard | undefined",
              "schema": "NavigationGuard | undefined"
            },
            "head": {
              "name": "head",
              "global": false,
              "description": "Available exclusively for `defineNuxtComponent`.\nIt will not be executed when using `defineComponent`.",
              "tags": [],
              "required": false,
              "type": "((nuxtApp: NuxtApp) => U<Deprecated>) | undefined",
              "schema": {
                "kind": "enum",
                "type": "((nuxtApp: NuxtApp) => U<Deprecated>) | undefined",
                "schema": {
                  "0": "undefined",
                  "1": {
                    "kind": "event",
                    "type": "(nuxtApp: NuxtApp): UseHeadInput<Deprecated>",
                    "schema": []
                  }
                }
              }
            }
          }
        },
        "20": {
          "kind": "event",
          "type": "(props: any, ctx: Omit<{ attrs: Data; slots: Readonly<InternalSlots>; emit: (event: string, ...args: any[]) => void; expose: <Exposed extends Record<string, any> = Record<string, any>>(exposed?: Exposed | undefined) => void; }, 'expose'>): any",
          "schema": []
        },
        "21": {
          "kind": "object",
          "type": "ComponentPublicInstanceConstructor<any, any, any, any, ComputedOptions, MethodOptions>",
          "schema": {}
        }
      }
    }
  },
  {
    "name": "bubbleSelect",
    "global": false,
    "description": "When `true`, selecting children will update the parent state.",
    "tags": [],
    "required": false,
    "type": "boolean | undefined",
    "schema": {
      "kind": "enum",
      "type": "boolean | undefined",
      "schema": {
        "0": "undefined",
        "1": "false",
        "2": "true"
      }
    }
  },
  {
    "name": "collapsedIcon",
    "global": false,
    "description": "The icon displayed when a parent node is collapsed.",
    "tags": [
      {
        "name": "defaultValue",
        "text": "appConfig.pohon.icons.folder"
      },
      {
        "name": "IconifyIcon"
      }
    ],
    "required": false,
    "type": "string | object | undefined",
    "schema": {
      "kind": "enum",
      "type": "string | object | undefined",
      "schema": {
        "0": "undefined",
        "1": "string",
        "2": "object"
      }
    }
  },
  {
    "name": "color",
    "global": false,
    "description": "",
    "tags": [
      {
        "name": "defaultValue",
        "text": "'primary'"
      }
    ],
    "required": false,
    "type": "'error' | 'primary' | 'secondary' | 'success' | 'info' | 'warning' | 'neutral' | undefined",
    "schema": {
      "kind": "enum",
      "type": "'error' | 'primary' | 'secondary' | 'success' | 'info' | 'warning' | 'neutral' | undefined",
      "schema": {
        "0": "undefined",
        "1": "'error'",
        "2": "'primary'",
        "3": "'secondary'",
        "4": "'success'",
        "5": "'info'",
        "6": "'warning'",
        "7": "'neutral'"
      }
    }
  },
  {
    "name": "defaultExpanded",
    "global": false,
    "description": "The value of the expanded tree when initially rendered. Use when you do not need to control the state of the expanded tree",
    "tags": [],
    "required": false,
    "type": "string[] | undefined",
    "schema": {
      "kind": "enum",
      "type": "string[] | undefined",
      "schema": {
        "0": "undefined",
        "1": {
          "kind": "array",
          "type": "string[]",
          "schema": [
            "string"
          ]
        }
      }
    }
  },
  {
    "name": "defaultValue",
    "global": false,
    "description": "The value of the Tree when initially rendered. Use when you do not need to control the state of the Tree.",
    "tags": [],
    "required": false,
    "type": "PTreeItem | PTreeItem[] | undefined",
    "schema": {
      "kind": "enum",
      "type": "PTreeItem | PTreeItem[] | undefined",
      "schema": {
        "0": "undefined",
        "1": {
          "kind": "object",
          "type": "PTreeItem",
          "schema": {
            "icon": {
              "name": "icon",
              "global": false,
              "description": "",
              "tags": [
                {
                  "name": "IconifyIcon"
                }
              ],
              "required": false,
              "type": "string | object | undefined",
              "schema": {
                "kind": "enum",
                "type": "string | object | undefined",
                "schema": {
                  "0": "undefined",
                  "1": "string",
                  "2": "object"
                }
              }
            },
            "label": {
              "name": "label",
              "global": false,
              "description": "",
              "tags": [],
              "required": false,
              "type": "string | undefined",
              "schema": {
                "kind": "enum",
                "type": "string | undefined",
                "schema": {
                  "0": "undefined",
                  "1": "string"
                }
              }
            },
            "trailingIcon": {
              "name": "trailingIcon",
              "global": false,
              "description": "",
              "tags": [
                {
                  "name": "IconifyIcon"
                }
              ],
              "required": false,
              "type": "string | object | undefined",
              "schema": "string | object | undefined"
            },
            "defaultExpanded": {
              "name": "defaultExpanded",
              "global": false,
              "description": "",
              "tags": [],
              "required": false,
              "type": "boolean | undefined",
              "schema": {
                "kind": "enum",
                "type": "boolean | undefined",
                "schema": {
                  "0": "undefined",
                  "1": "false",
                  "2": "true"
                }
              }
            },
            "disabled": {
              "name": "disabled",
              "global": false,
              "description": "",
              "tags": [],
              "required": false,
              "type": "boolean | undefined",
              "schema": "boolean | undefined"
            },
            "slot": {
              "name": "slot",
              "global": false,
              "description": "",
              "tags": [],
              "required": false,
              "type": "string | undefined",
              "schema": "string | undefined"
            },
            "children": {
              "name": "children",
              "global": false,
              "description": "",
              "tags": [],
              "required": false,
              "type": "PTreeItem[] | undefined",
              "schema": {
                "kind": "enum",
                "type": "PTreeItem[] | undefined",
                "schema": {
                  "0": "undefined",
                  "1": "PTreeItem[]"
                }
              }
            },
            "onToggle": {
              "name": "onToggle",
              "global": false,
              "description": "",
              "tags": [],
              "required": false,
              "type": "((event: Event) => void) | undefined",
              "schema": {
                "kind": "enum",
                "type": "((event: Event) => void) | undefined",
                "schema": {
                  "0": "undefined",
                  "1": {
                    "kind": "event",
                    "type": "(event: Event): void",
                    "schema": []
                  }
                }
              }
            },
            "onSelect": {
              "name": "onSelect",
              "global": false,
              "description": "",
              "tags": [],
              "required": false,
              "type": "((event?: Event | undefined) => void) | undefined",
              "schema": {
                "kind": "enum",
                "type": "((event?: Event | undefined) => void) | undefined",
                "schema": {
                  "0": "undefined",
                  "1": {
                    "kind": "event",
                    "type": "(event?: Event | undefined): void",
                    "schema": []
                  }
                }
              }
            },
            "class": {
              "name": "class",
              "global": false,
              "description": "",
              "tags": [],
              "required": false,
              "type": "any",
              "schema": "any"
            },
            "pohon": {
              "name": "pohon",
              "global": false,
              "description": "",
              "tags": [],
              "required": false,
              "type": "Pick<{ root?: ClassValue; item?: ClassValue; listWithChildren?: ClassValue; itemWithChildren?: ClassValue; link?: ClassValue; linkLeadingIcon?: ClassValue; linkLabel?: ClassValue; linkTrailing?: ClassValue; linkTrailingIcon?: ClassValue; }, 'link' | 'item' | 'linkLeadingIcon' | 'linkLabel' | 'linkTrailing' | 'linkTrailingIcon' | 'listWithChildren' | 'itemWithChildren'> | undefined",
              "schema": {
                "kind": "enum",
                "type": "Pick<{ root?: ClassValue; item?: ClassValue; listWithChildren?: ClassValue; itemWithChildren?: ClassValue; link?: ClassValue; linkLeadingIcon?: ClassValue; linkLabel?: ClassValue; linkTrailing?: ClassValue; linkTrailingIcon?: ClassValue; }, 'link' | 'item' | 'linkLeadingIcon' | 'linkLabel' | 'linkTrailing' | 'linkTrailingIcon' | 'listWithChildren' | 'itemWithChildren'> | undefined",
                "schema": {
                  "0": "undefined",
                  "1": "Pick<{ root?: ClassValue; item?: ClassValue; listWithChildren?: ClassValue; itemWithChildren?: ClassValue; link?: ClassValue; linkLeadingIcon?: ClassValue; linkLabel?: ClassValue; linkTrailing?: ClassValue; linkTrailingIcon?: ClassValue; }, 'link' | 'item' | 'linkLeadingIcon' | 'linkLabel' | 'linkTrailing' | 'linkTrailingIcon' | 'listWithChildren' | 'itemWithChildren'>"
                }
              }
            }
          }
        },
        "2": {
          "kind": "array",
          "type": "PTreeItem[]",
          "schema": [
            "PTreeItem"
          ]
        }
      }
    }
  },
  {
    "name": "disabled",
    "global": false,
    "description": "When `true`, prevents the user from interacting with tree",
    "tags": [],
    "required": false,
    "type": "boolean | undefined",
    "schema": {
      "kind": "enum",
      "type": "boolean | undefined",
      "schema": {
        "0": "undefined",
        "1": "false",
        "2": "true"
      }
    }
  },
  {
    "name": "expanded",
    "global": false,
    "description": "The controlled value of the expanded item. Can be binded with with `v-model`.",
    "tags": [],
    "required": false,
    "type": "string[] | undefined",
    "schema": {
      "kind": "enum",
      "type": "string[] | undefined",
      "schema": {
        "0": "undefined",
        "1": {
          "kind": "array",
          "type": "string[]",
          "schema": [
            "string"
          ]
        }
      }
    }
  },
  {
    "name": "expandedIcon",
    "global": false,
    "description": "The icon displayed when a parent node is expanded.",
    "tags": [
      {
        "name": "defaultValue",
        "text": "appConfig.pohon.icons.folderOpen"
      },
      {
        "name": "IconifyIcon"
      }
    ],
    "required": false,
    "type": "string | object | undefined",
    "schema": {
      "kind": "enum",
      "type": "string | object | undefined",
      "schema": {
        "0": "undefined",
        "1": "string",
        "2": "object"
      }
    }
  },
  {
    "name": "getKey",
    "global": false,
    "description": "This function is passed the index of each item and should return a unique key for that item",
    "tags": [],
    "required": false,
    "type": "((val: PTreeItem) => string) | undefined",
    "schema": {
      "kind": "enum",
      "type": "((val: PTreeItem) => string) | undefined",
      "schema": {
        "0": "undefined",
        "1": {
          "kind": "event",
          "type": "(val: PTreeItem): string",
          "schema": []
        }
      }
    }
  },
  {
    "name": "items",
    "global": false,
    "description": "",
    "tags": [],
    "required": false,
    "type": "PTreeItem[] | undefined",
    "schema": {
      "kind": "enum",
      "type": "PTreeItem[] | undefined",
      "schema": {
        "0": "undefined",
        "1": {
          "kind": "array",
          "type": "PTreeItem[]",
          "schema": [
            {
              "kind": "object",
              "type": "PTreeItem",
              "schema": {
                "icon": {
                  "name": "icon",
                  "global": false,
                  "description": "",
                  "tags": [
                    {
                      "name": "IconifyIcon"
                    }
                  ],
                  "required": false,
                  "type": "string | object | undefined",
                  "schema": {
                    "kind": "enum",
                    "type": "string | object | undefined",
                    "schema": {
                      "0": "undefined",
                      "1": "string",
                      "2": "object"
                    }
                  }
                },
                "label": {
                  "name": "label",
                  "global": false,
                  "description": "",
                  "tags": [],
                  "required": false,
                  "type": "string | undefined",
                  "schema": {
                    "kind": "enum",
                    "type": "string | undefined",
                    "schema": {
                      "0": "undefined",
                      "1": "string"
                    }
                  }
                },
                "trailingIcon": {
                  "name": "trailingIcon",
                  "global": false,
                  "description": "",
                  "tags": [
                    {
                      "name": "IconifyIcon"
                    }
                  ],
                  "required": false,
                  "type": "string | object | undefined",
                  "schema": "string | object | undefined"
                },
                "defaultExpanded": {
                  "name": "defaultExpanded",
                  "global": false,
                  "description": "",
                  "tags": [],
                  "required": false,
                  "type": "boolean | undefined",
                  "schema": {
                    "kind": "enum",
                    "type": "boolean | undefined",
                    "schema": {
                      "0": "undefined",
                      "1": "false",
                      "2": "true"
                    }
                  }
                },
                "disabled": {
                  "name": "disabled",
                  "global": false,
                  "description": "",
                  "tags": [],
                  "required": false,
                  "type": "boolean | undefined",
                  "schema": "boolean | undefined"
                },
                "slot": {
                  "name": "slot",
                  "global": false,
                  "description": "",
                  "tags": [],
                  "required": false,
                  "type": "string | undefined",
                  "schema": "string | undefined"
                },
                "children": {
                  "name": "children",
                  "global": false,
                  "description": "",
                  "tags": [],
                  "required": false,
                  "type": "PTreeItem[] | undefined",
                  "schema": "PTreeItem[] | undefined"
                },
                "onToggle": {
                  "name": "onToggle",
                  "global": false,
                  "description": "",
                  "tags": [],
                  "required": false,
                  "type": "((event: Event) => void) | undefined",
                  "schema": {
                    "kind": "enum",
                    "type": "((event: Event) => void) | undefined",
                    "schema": {
                      "0": "undefined",
                      "1": {
                        "kind": "event",
                        "type": "(event: Event): void",
                        "schema": []
                      }
                    }
                  }
                },
                "onSelect": {
                  "name": "onSelect",
                  "global": false,
                  "description": "",
                  "tags": [],
                  "required": false,
                  "type": "((event?: Event | undefined) => void) | undefined",
                  "schema": {
                    "kind": "enum",
                    "type": "((event?: Event | undefined) => void) | undefined",
                    "schema": {
                      "0": "undefined",
                      "1": {
                        "kind": "event",
                        "type": "(event?: Event | undefined): void",
                        "schema": []
                      }
                    }
                  }
                },
                "class": {
                  "name": "class",
                  "global": false,
                  "description": "",
                  "tags": [],
                  "required": false,
                  "type": "any",
                  "schema": "any"
                },
                "pohon": {
                  "name": "pohon",
                  "global": false,
                  "description": "",
                  "tags": [],
                  "required": false,
                  "type": "Pick<{ root?: ClassValue; item?: ClassValue; listWithChildren?: ClassValue; itemWithChildren?: ClassValue; link?: ClassValue; linkLeadingIcon?: ClassValue; linkLabel?: ClassValue; linkTrailing?: ClassValue; linkTrailingIcon?: ClassValue; }, 'link' | 'item' | 'linkLeadingIcon' | 'linkLabel' | 'linkTrailing' | 'linkTrailingIcon' | 'listWithChildren' | 'itemWithChildren'> | undefined",
                  "schema": {
                    "kind": "enum",
                    "type": "Pick<{ root?: ClassValue; item?: ClassValue; listWithChildren?: ClassValue; itemWithChildren?: ClassValue; link?: ClassValue; linkLeadingIcon?: ClassValue; linkLabel?: ClassValue; linkTrailing?: ClassValue; linkTrailingIcon?: ClassValue; }, 'link' | 'item' | 'linkLeadingIcon' | 'linkLabel' | 'linkTrailing' | 'linkTrailingIcon' | 'listWithChildren' | 'itemWithChildren'> | undefined",
                    "schema": {
                      "0": "undefined",
                      "1": "Pick<{ root?: ClassValue; item?: ClassValue; listWithChildren?: ClassValue; itemWithChildren?: ClassValue; link?: ClassValue; linkLeadingIcon?: ClassValue; linkLabel?: ClassValue; linkTrailing?: ClassValue; linkTrailingIcon?: ClassValue; }, 'link' | 'item' | 'linkLeadingIcon' | 'linkLabel' | 'linkTrailing' | 'linkTrailingIcon' | 'listWithChildren' | 'itemWithChildren'>"
                    }
                  }
                }
              }
            }
          ]
        }
      }
    }
  },
  {
    "name": "labelKey",
    "global": false,
    "description": "The key used to get the label from the item.",
    "tags": [
      {
        "name": "defaultValue",
        "text": "'label'"
      }
    ],
    "required": false,
    "type": "GetItemKeys<PTreeItem[]> | undefined",
    "schema": {
      "kind": "enum",
      "type": "GetItemKeys<PTreeItem[]> | undefined",
      "schema": {
        "0": "undefined",
        "1": "string",
        "2": "number"
      }
    },
    "default": "'label'"
  },
  {
    "name": "modelValue",
    "global": false,
    "description": "The controlled value of the Tree. Can be bind as `v-model`.",
    "tags": [],
    "required": false,
    "type": "PTreeItem | PTreeItem[] | undefined",
    "schema": {
      "kind": "enum",
      "type": "PTreeItem | PTreeItem[] | undefined",
      "schema": {
        "0": "undefined",
        "1": {
          "kind": "object",
          "type": "PTreeItem",
          "schema": {
            "icon": {
              "name": "icon",
              "global": false,
              "description": "",
              "tags": [
                {
                  "name": "IconifyIcon"
                }
              ],
              "required": false,
              "type": "string | object | undefined",
              "schema": {
                "kind": "enum",
                "type": "string | object | undefined",
                "schema": {
                  "0": "undefined",
                  "1": "string",
                  "2": "object"
                }
              }
            },
            "label": {
              "name": "label",
              "global": false,
              "description": "",
              "tags": [],
              "required": false,
              "type": "string | undefined",
              "schema": {
                "kind": "enum",
                "type": "string | undefined",
                "schema": {
                  "0": "undefined",
                  "1": "string"
                }
              }
            },
            "trailingIcon": {
              "name": "trailingIcon",
              "global": false,
              "description": "",
              "tags": [
                {
                  "name": "IconifyIcon"
                }
              ],
              "required": false,
              "type": "string | object | undefined",
              "schema": "string | object | undefined"
            },
            "defaultExpanded": {
              "name": "defaultExpanded",
              "global": false,
              "description": "",
              "tags": [],
              "required": false,
              "type": "boolean | undefined",
              "schema": {
                "kind": "enum",
                "type": "boolean | undefined",
                "schema": {
                  "0": "undefined",
                  "1": "false",
                  "2": "true"
                }
              }
            },
            "disabled": {
              "name": "disabled",
              "global": false,
              "description": "",
              "tags": [],
              "required": false,
              "type": "boolean | undefined",
              "schema": "boolean | undefined"
            },
            "slot": {
              "name": "slot",
              "global": false,
              "description": "",
              "tags": [],
              "required": false,
              "type": "string | undefined",
              "schema": "string | undefined"
            },
            "children": {
              "name": "children",
              "global": false,
              "description": "",
              "tags": [],
              "required": false,
              "type": "PTreeItem[] | undefined",
              "schema": {
                "kind": "enum",
                "type": "PTreeItem[] | undefined",
                "schema": {
                  "0": "undefined",
                  "1": "PTreeItem[]"
                }
              }
            },
            "onToggle": {
              "name": "onToggle",
              "global": false,
              "description": "",
              "tags": [],
              "required": false,
              "type": "((event: Event) => void) | undefined",
              "schema": {
                "kind": "enum",
                "type": "((event: Event) => void) | undefined",
                "schema": {
                  "0": "undefined",
                  "1": {
                    "kind": "event",
                    "type": "(event: Event): void",
                    "schema": []
                  }
                }
              }
            },
            "onSelect": {
              "name": "onSelect",
              "global": false,
              "description": "",
              "tags": [],
              "required": false,
              "type": "((event?: Event | undefined) => void) | undefined",
              "schema": {
                "kind": "enum",
                "type": "((event?: Event | undefined) => void) | undefined",
                "schema": {
                  "0": "undefined",
                  "1": {
                    "kind": "event",
                    "type": "(event?: Event | undefined): void",
                    "schema": []
                  }
                }
              }
            },
            "class": {
              "name": "class",
              "global": false,
              "description": "",
              "tags": [],
              "required": false,
              "type": "any",
              "schema": "any"
            },
            "pohon": {
              "name": "pohon",
              "global": false,
              "description": "",
              "tags": [],
              "required": false,
              "type": "Pick<{ root?: ClassValue; item?: ClassValue; listWithChildren?: ClassValue; itemWithChildren?: ClassValue; link?: ClassValue; linkLeadingIcon?: ClassValue; linkLabel?: ClassValue; linkTrailing?: ClassValue; linkTrailingIcon?: ClassValue; }, 'link' | 'item' | 'linkLeadingIcon' | 'linkLabel' | 'linkTrailing' | 'linkTrailingIcon' | 'listWithChildren' | 'itemWithChildren'> | undefined",
              "schema": {
                "kind": "enum",
                "type": "Pick<{ root?: ClassValue; item?: ClassValue; listWithChildren?: ClassValue; itemWithChildren?: ClassValue; link?: ClassValue; linkLeadingIcon?: ClassValue; linkLabel?: ClassValue; linkTrailing?: ClassValue; linkTrailingIcon?: ClassValue; }, 'link' | 'item' | 'linkLeadingIcon' | 'linkLabel' | 'linkTrailing' | 'linkTrailingIcon' | 'listWithChildren' | 'itemWithChildren'> | undefined",
                "schema": {
                  "0": "undefined",
                  "1": "Pick<{ root?: ClassValue; item?: ClassValue; listWithChildren?: ClassValue; itemWithChildren?: ClassValue; link?: ClassValue; linkLeadingIcon?: ClassValue; linkLabel?: ClassValue; linkTrailing?: ClassValue; linkTrailingIcon?: ClassValue; }, 'link' | 'item' | 'linkLeadingIcon' | 'linkLabel' | 'linkTrailing' | 'linkTrailingIcon' | 'listWithChildren' | 'itemWithChildren'>"
                }
              }
            }
          }
        },
        "2": {
          "kind": "array",
          "type": "PTreeItem[]",
          "schema": [
            "PTreeItem"
          ]
        }
      }
    }
  },
  {
    "name": "multiple",
    "global": false,
    "description": "Whether multiple options can be selected or not.",
    "tags": [],
    "required": false,
    "type": "boolean | undefined",
    "schema": {
      "kind": "enum",
      "type": "boolean | undefined",
      "schema": {
        "0": "undefined",
        "1": "false",
        "2": "true"
      }
    }
  },
  {
    "name": "propagateSelect",
    "global": false,
    "description": "When `true`, selecting parent will select the descendants.",
    "tags": [],
    "required": false,
    "type": "boolean | undefined",
    "schema": {
      "kind": "enum",
      "type": "boolean | undefined",
      "schema": {
        "0": "undefined",
        "1": "false",
        "2": "true"
      }
    }
  },
  {
    "name": "selectionBehavior",
    "global": false,
    "description": "How multiple selection should behave in the collection.",
    "tags": [],
    "required": false,
    "type": "'replace' | 'toggle' | undefined",
    "schema": {
      "kind": "enum",
      "type": "'replace' | 'toggle' | undefined",
      "schema": {
        "0": "undefined",
        "1": "'replace'",
        "2": "'toggle'"
      }
    }
  },
  {
    "name": "size",
    "global": false,
    "description": "",
    "tags": [
      {
        "name": "defaultValue",
        "text": "'md'"
      }
    ],
    "required": false,
    "type": "'md' | 'xs' | 'sm' | 'lg' | 'xl' | undefined",
    "schema": {
      "kind": "enum",
      "type": "'md' | 'xs' | 'sm' | 'lg' | 'xl' | undefined",
      "schema": {
        "0": "undefined",
        "1": "'md'",
        "2": "'xs'",
        "3": "'sm'",
        "4": "'lg'",
        "5": "'xl'"
      }
    }
  },
  {
    "name": "trailingIcon",
    "global": false,
    "description": "The icon displayed on the right side of a parent node.",
    "tags": [
      {
        "name": "defaultValue",
        "text": "appConfig.pohon.icons.chevronDown"
      },
      {
        "name": "IconifyIcon"
      }
    ],
    "required": false,
    "type": "string | object | undefined",
    "schema": {
      "kind": "enum",
      "type": "string | object | undefined",
      "schema": {
        "0": "undefined",
        "1": "string",
        "2": "object"
      }
    }
  },
  {
    "name": "pohon",
    "global": false,
    "description": "",
    "tags": [],
    "required": false,
    "type": "{ root?: ClassValue; item?: ClassValue; listWithChildren?: ClassValue; itemWithChildren?: ClassValue; link?: ClassValue; linkLeadingIcon?: ClassValue; linkLabel?: ClassValue; linkTrailing?: ClassValue; linkTrailingIcon?: ClassValue; } | undefined",
    "schema": {
      "kind": "enum",
      "type": "{ root?: ClassValue; item?: ClassValue; listWithChildren?: ClassValue; itemWithChildren?: ClassValue; link?: ClassValue; linkLeadingIcon?: ClassValue; linkLabel?: ClassValue; linkTrailing?: ClassValue; linkTrailingIcon?: ClassValue; } | undefined",
      "schema": {
        "0": "undefined",
        "1": "{ root?: ClassValue; item?: ClassValue; listWithChildren?: ClassValue; itemWithChildren?: ClassValue; link?: ClassValue; linkLeadingIcon?: ClassValue; linkLabel?: ClassValue; linkTrailing?: ClassValue; linkTrailingIcon?: ClassValue; }"
      }
    }
  }
],
  "emits": [
  {
    "name": "update:expanded",
    "description": "",
    "type": "[val: string[]]"
  },
  {
    "name": "update:modelValue",
    "description": "",
    "type": "[val: PTreeItem | PTreeItem[]]"
  }
],
  "slots": [
  {
    "name": "item",
    "description": "",
    "type": "PTreeItem"
  },
  {
    "name": "index",
    "description": "",
    "type": "number"
  },
  {
    "name": "level",
    "description": "",
    "type": "number"
  },
  {
    "name": "expanded",
    "description": "",
    "type": "boolean"
  },
  {
    "name": "selected",
    "description": "",
    "type": "boolean"
  }
]
}
