{
  "props": [
  {
    "name": "locale",
    "global": false,
    "description": "",
    "tags": [],
    "required": false,
    "type": "PLocale<PMessages> | undefined",
    "schema": {
      "kind": "enum",
      "type": "PLocale<PMessages> | undefined",
      "schema": {
        "0": "undefined",
        "1": "PLocale<PMessages>"
      }
    }
  },
  {
    "name": "nonce",
    "global": false,
    "description": "The global `nonce` value of your application. This will be inherited by the related primitives.",
    "tags": [],
    "required": false,
    "type": "string | undefined",
    "schema": {
      "kind": "enum",
      "type": "string | undefined",
      "schema": {
        "0": "undefined",
        "1": "string"
      }
    }
  },
  {
    "name": "portal",
    "global": false,
    "description": "",
    "tags": [],
    "required": false,
    "type": "string | boolean | HTMLElement | undefined",
    "schema": {
      "kind": "enum",
      "type": "string | boolean | HTMLElement | undefined",
      "schema": {
        "0": "undefined",
        "1": "string",
        "2": "false",
        "3": "true",
        "4": {
          "kind": "object",
          "type": "HTMLElement",
          "schema": {}
        }
      }
    },
    "default": "'body'"
  },
  {
    "name": "scrollBody",
    "global": false,
    "description": "The global scroll body behavior of your application. This will be inherited by the related primitives.",
    "tags": [],
    "required": false,
    "type": "boolean | ScrollBodyOption | undefined",
    "schema": {
      "kind": "enum",
      "type": "boolean | ScrollBodyOption | undefined",
      "schema": {
        "0": "undefined",
        "1": "false",
        "2": "true",
        "3": {
          "kind": "object",
          "type": "ScrollBodyOption",
          "schema": {
            "padding": {
              "name": "padding",
              "global": false,
              "description": "",
              "tags": [],
              "required": false,
              "type": "string | number | boolean | undefined",
              "schema": {
                "kind": "enum",
                "type": "string | number | boolean | undefined",
                "schema": {
                  "0": "undefined",
                  "1": "string",
                  "2": "number",
                  "3": "false",
                  "4": "true"
                }
              }
            },
            "margin": {
              "name": "margin",
              "global": false,
              "description": "",
              "tags": [],
              "required": false,
              "type": "string | number | boolean | undefined",
              "schema": "string | number | boolean | undefined"
            }
          }
        }
      }
    }
  },
  {
    "name": "toaster",
    "global": false,
    "description": "",
    "tags": [],
    "required": false,
    "type": "PToasterProps | null | undefined",
    "schema": {
      "kind": "enum",
      "type": "PToasterProps | null | undefined",
      "schema": {
        "0": "undefined",
        "1": "null",
        "2": {
          "kind": "object",
          "type": "PToasterProps",
          "schema": {
            "position": {
              "name": "position",
              "global": false,
              "description": "The position on the screen to display the toasts.",
              "tags": [
                {
                  "name": "defaultValue",
                  "text": "'bottom-right'"
                }
              ],
              "required": false,
              "type": "'top-right' | 'bottom-right' | 'top-left' | 'bottom-left' | 'top-center' | 'bottom-center' | undefined",
              "schema": {
                "kind": "enum",
                "type": "'top-right' | 'bottom-right' | 'top-left' | 'bottom-left' | 'top-center' | 'bottom-center' | undefined",
                "schema": {
                  "0": "undefined",
                  "1": "'top-right'",
                  "2": "'bottom-right'",
                  "3": "'top-left'",
                  "4": "'bottom-left'",
                  "5": "'top-center'",
                  "6": "'bottom-center'"
                }
              }
            },
            "expand": {
              "name": "expand",
              "global": false,
              "description": "Expand the toasts to show multiple toasts at once.",
              "tags": [
                {
                  "name": "defaultValue",
                  "text": "true"
                }
              ],
              "required": false,
              "type": "boolean | undefined",
              "schema": {
                "kind": "enum",
                "type": "boolean | undefined",
                "schema": {
                  "0": "undefined",
                  "1": "false",
                  "2": "true"
                }
              }
            },
            "progress": {
              "name": "progress",
              "global": false,
              "description": "Whether to show the progress bar on all toasts.",
              "tags": [
                {
                  "name": "defaultValue",
                  "text": "true"
                }
              ],
              "required": false,
              "type": "boolean | undefined",
              "schema": "boolean | undefined"
            },
            "portal": {
              "name": "portal",
              "global": false,
              "description": "Render the toaster in a portal.",
              "tags": [
                {
                  "name": "defaultValue",
                  "text": "true"
                }
              ],
              "required": false,
              "type": "string | boolean | HTMLElement | undefined",
              "schema": {
                "kind": "enum",
                "type": "string | boolean | HTMLElement | undefined",
                "schema": {
                  "0": "undefined",
                  "1": "string",
                  "2": "false",
                  "3": "true",
                  "4": {
                    "kind": "object",
                    "type": "HTMLElement",
                    "schema": {}
                  }
                }
              }
            },
            "class": {
              "name": "class",
              "global": false,
              "description": "",
              "tags": [],
              "required": false,
              "type": "any",
              "schema": "any"
            },
            "pohon": {
              "name": "pohon",
              "global": false,
              "description": "",
              "tags": [],
              "required": false,
              "type": "{ viewport?: ClassValue; base?: ClassValue; } | undefined",
              "schema": {
                "kind": "enum",
                "type": "{ viewport?: ClassValue; base?: ClassValue; } | undefined",
                "schema": {
                  "0": "undefined",
                  "1": "{ viewport?: ClassValue; base?: ClassValue; }"
                }
              }
            },
            "label": {
              "name": "label",
              "global": false,
              "description": "An author-localized label for each toast. Used to help screen reader users\nassociate the interruption with a toast.",
              "tags": [
                {
                  "name": "defaultValue",
                  "text": "'Notification'"
                }
              ],
              "required": false,
              "type": "string | undefined",
              "schema": {
                "kind": "enum",
                "type": "string | undefined",
                "schema": {
                  "0": "undefined",
                  "1": "string"
                }
              }
            },
            "duration": {
              "name": "duration",
              "global": false,
              "description": "Time in milliseconds that each toast should remain visible for.",
              "tags": [
                {
                  "name": "defaultValue",
                  "text": "5000"
                }
              ],
              "required": false,
              "type": "number | undefined",
              "schema": {
                "kind": "enum",
                "type": "number | undefined",
                "schema": {
                  "0": "undefined",
                  "1": "number"
                }
              }
            },
            "swipeThreshold": {
              "name": "swipeThreshold",
              "global": false,
              "description": "Distance in pixels that the swipe must pass before a close is triggered.",
              "tags": [
                {
                  "name": "defaultValue",
                  "text": "50"
                }
              ],
              "required": false,
              "type": "number | undefined",
              "schema": "number | undefined"
            }
          }
        }
      }
    }
  },
  {
    "name": "tooltip",
    "global": false,
    "description": "",
    "tags": [],
    "required": false,
    "type": "ATooltipProviderProps | undefined",
    "schema": {
      "kind": "enum",
      "type": "ATooltipProviderProps | undefined",
      "schema": {
        "0": "undefined",
        "1": {
          "kind": "object",
          "type": "ATooltipProviderProps",
          "schema": {
            "delayDuration": {
              "name": "delayDuration",
              "global": false,
              "description": "The duration from when the pointer enters the trigger until the tooltip gets opened.",
              "tags": [
                {
                  "name": "defaultValue",
                  "text": "700"
                }
              ],
              "required": false,
              "type": "number | undefined",
              "schema": {
                "kind": "enum",
                "type": "number | undefined",
                "schema": {
                  "0": "undefined",
                  "1": "number"
                }
              }
            },
            "skipDelayDuration": {
              "name": "skipDelayDuration",
              "global": false,
              "description": "How much time a user has to enter another trigger without incurring a delay again.",
              "tags": [
                {
                  "name": "defaultValue",
                  "text": "300"
                }
              ],
              "required": false,
              "type": "number | undefined",
              "schema": "number | undefined"
            },
            "disableHoverableContent": {
              "name": "disableHoverableContent",
              "global": false,
              "description": "When `true`, trying to hover the content will result in the tooltip closing as the pointer leaves the trigger.",
              "tags": [
                {
                  "name": "defaultValue",
                  "text": "false"
                }
              ],
              "required": false,
              "type": "boolean | undefined",
              "schema": {
                "kind": "enum",
                "type": "boolean | undefined",
                "schema": {
                  "0": "undefined",
                  "1": "false",
                  "2": "true"
                }
              }
            },
            "disableClosingTrigger": {
              "name": "disableClosingTrigger",
              "global": false,
              "description": "When `true`, clicking on trigger will not close the content.",
              "tags": [
                {
                  "name": "defaultValue",
                  "text": "false"
                }
              ],
              "required": false,
              "type": "boolean | undefined",
              "schema": "boolean | undefined"
            },
            "disabled": {
              "name": "disabled",
              "global": false,
              "description": "When `true`, disable tooltip",
              "tags": [
                {
                  "name": "defaultValue",
                  "text": "false"
                }
              ],
              "required": false,
              "type": "boolean | undefined",
              "schema": "boolean | undefined"
            },
            "ignoreNonKeyboardFocus": {
              "name": "ignoreNonKeyboardFocus",
              "global": false,
              "description": "Prevent the tooltip from opening if the focus did not come from\nthe keyboard by matching against the `:focus-visible` selector.\nThis is useful if you want to avoid opening it when switching\nbrowser tabs or closing a dialog.",
              "tags": [
                {
                  "name": "defaultValue",
                  "text": "false"
                }
              ],
              "required": false,
              "type": "boolean | undefined",
              "schema": "boolean | undefined"
            }
          }
        }
      }
    }
  }
],
  "slots": [
  {
    "description": "",
    "type": ""
  },
  {
    "description": "",
    "type": ""
  }
]
}
