{
  "props": [
  {
    "name": "as",
    "description": "The element or component this component should render as. Can be overwritten by `asChild`.",
    "type": "APrimitiveAsTag | Component",
    "required": false,
    "default": "'div'"
  },
  {
    "name": "asChild",
    "description": "Change the default rendered element for the one passed as a child, merging their props and behavior.\n\nRead our [Composition](https://akar.vinicunca.dev/core/guides/composition) guide for more details.",
    "type": "boolean",
    "required": false
  },
  {
    "name": "dir",
    "description": "The reading direction of the combobox when applicable. <br> If omitted, inherits globally from `AConfigProvider` or assumes LTR (left-to-right) reading mode.",
    "type": "'ltr' | 'rtl'",
    "required": false
  },
  {
    "name": "scrollHideDelay",
    "description": "If type is set to either `scroll` or `hover`, this prop determines the length of time, in milliseconds, <br> before the scrollbars are hidden after the user stops interacting with scrollbars.",
    "type": "number",
    "required": false,
    "default": "600"
  },
  {
    "name": "type",
    "description": "Describes the nature of scrollbar visibility, similar to how the scrollbar preferences in MacOS control visibility of native scrollbars.\n\n`auto` - means that scrollbars are visible when content is overflowing on the corresponding orientation. <br>\n`always` - means that scrollbars are always visible regardless of whether the content is overflowing.<br>\n`scroll` - means that scrollbars are visible when the user is scrolling along its corresponding orientation.<br>\n`hover` - when the user is scrolling along its corresponding orientation and when the user is hovering over the scroll area.",
    "type": "'always' | 'scroll' | 'hover' | 'auto'",
    "required": false,
    "default": "'hover'"
  }
],
  "exposed": [
  {
    "name": "scrollTop",
    "description": "Scroll viewport to top",
    "type": "() => void"
  },
  {
    "name": "scrollTopLeft",
    "description": "Scroll viewport to top-left",
    "type": "() => void"
  }
]
}
