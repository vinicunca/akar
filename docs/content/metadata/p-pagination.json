{
  "props": [
  {
    "name": "as",
    "global": false,
    "description": "The element or component this component should render as.\n\nRead our [primitive tag](https://akar.vinicunca.dev/core/guides/primitive-tag) guide for more details.",
    "tags": [
      {
        "name": "defaultValue",
        "text": "'div'"
      }
    ],
    "required": false,
    "type": "APrimitiveAsTag | Component | undefined",
    "schema": "any"
  },
  {
    "name": "activeColor",
    "global": false,
    "description": "The color of the active pagination control.",
    "tags": [
      {
        "name": "defaultValue",
        "text": "'primary'"
      }
    ],
    "required": false,
    "type": "'error' | 'primary' | 'secondary' | 'success' | 'info' | 'warning' | 'neutral' | undefined",
    "schema": {
      "kind": "enum",
      "type": "'error' | 'primary' | 'secondary' | 'success' | 'info' | 'warning' | 'neutral' | undefined",
      "schema": {
        "0": "undefined",
        "1": "'error'",
        "2": "'primary'",
        "3": "'secondary'",
        "4": "'success'",
        "5": "'info'",
        "6": "'warning'",
        "7": "'neutral'"
      }
    },
    "default": "'primary'"
  },
  {
    "name": "activeVariant",
    "global": false,
    "description": "The variant of the active pagination control.",
    "tags": [
      {
        "name": "defaultValue",
        "text": "'solid'"
      }
    ],
    "required": false,
    "type": "'link' | 'solid' | 'outline' | 'soft' | 'subtle' | 'ghost' | undefined",
    "schema": {
      "kind": "enum",
      "type": "'link' | 'solid' | 'outline' | 'soft' | 'subtle' | 'ghost' | undefined",
      "schema": {
        "0": "undefined",
        "1": "'link'",
        "2": "'solid'",
        "3": "'outline'",
        "4": "'soft'",
        "5": "'subtle'",
        "6": "'ghost'"
      }
    },
    "default": "'solid'"
  },
  {
    "name": "color",
    "global": false,
    "description": "The color of the pagination controls.",
    "tags": [
      {
        "name": "defaultValue",
        "text": "'neutral'"
      },
      {
        "name": "IconifyIcon"
      }
    ],
    "required": false,
    "type": "'error' | 'primary' | 'secondary' | 'success' | 'info' | 'warning' | 'neutral' | undefined",
    "schema": {
      "kind": "enum",
      "type": "'error' | 'primary' | 'secondary' | 'success' | 'info' | 'warning' | 'neutral' | undefined",
      "schema": {
        "0": "undefined",
        "1": "'error'",
        "2": "'primary'",
        "3": "'secondary'",
        "4": "'success'",
        "5": "'info'",
        "6": "'warning'",
        "7": "'neutral'"
      }
    },
    "default": "'neutral'"
  },
  {
    "name": "defaultPage",
    "global": false,
    "description": "The value of the page that should be active when initially rendered.\n\nUse when you do not need to control the value state.",
    "tags": [],
    "required": false,
    "type": "number | undefined",
    "schema": {
      "kind": "enum",
      "type": "number | undefined",
      "schema": {
        "0": "undefined",
        "1": "number"
      }
    }
  },
  {
    "name": "disabled",
    "global": false,
    "description": "When `true`, prevents the user from interacting with item",
    "tags": [],
    "required": false,
    "type": "boolean | undefined",
    "schema": {
      "kind": "enum",
      "type": "boolean | undefined",
      "schema": {
        "0": "undefined",
        "1": "false",
        "2": "true"
      }
    }
  },
  {
    "name": "ellipsisIcon",
    "global": false,
    "description": "The icon to use for the ellipsis control.",
    "tags": [
      {
        "name": "defaultValue",
        "text": "appConfig.pohon.icons.ellipsis"
      },
      {
        "name": "IconifyIcon"
      }
    ],
    "required": false,
    "type": "string | object | undefined",
    "schema": {
      "kind": "enum",
      "type": "string | object | undefined",
      "schema": {
        "0": "undefined",
        "1": "string",
        "2": "object"
      }
    }
  },
  {
    "name": "firstIcon",
    "global": false,
    "description": "The icon to use for the first page control.",
    "tags": [
      {
        "name": "defaultValue",
        "text": "appConfig.pohon.icons.chevronDoubleLeft"
      },
      {
        "name": "IconifyIcon"
      }
    ],
    "required": false,
    "type": "string | object | undefined",
    "schema": {
      "kind": "enum",
      "type": "string | object | undefined",
      "schema": {
        "0": "undefined",
        "1": "string",
        "2": "object"
      }
    }
  },
  {
    "name": "itemsPerPage",
    "global": false,
    "description": "Number of items per page",
    "tags": [],
    "required": false,
    "type": "number | undefined",
    "schema": {
      "kind": "enum",
      "type": "number | undefined",
      "schema": {
        "0": "undefined",
        "1": "number"
      }
    },
    "default": "10"
  },
  {
    "name": "lastIcon",
    "global": false,
    "description": "The icon to use for the last page control.",
    "tags": [
      {
        "name": "defaultValue",
        "text": "appConfig.pohon.icons.chevronDoubleRight"
      },
      {
        "name": "IconifyIcon"
      }
    ],
    "required": false,
    "type": "string | object | undefined",
    "schema": {
      "kind": "enum",
      "type": "string | object | undefined",
      "schema": {
        "0": "undefined",
        "1": "string",
        "2": "object"
      }
    }
  },
  {
    "name": "nextIcon",
    "global": false,
    "description": "The icon to use for the next page control.",
    "tags": [
      {
        "name": "defaultValue",
        "text": "appConfig.pohon.icons.chevronRight"
      },
      {
        "name": "IconifyIcon"
      }
    ],
    "required": false,
    "type": "string | object | undefined",
    "schema": {
      "kind": "enum",
      "type": "string | object | undefined",
      "schema": {
        "0": "undefined",
        "1": "string",
        "2": "object"
      }
    }
  },
  {
    "name": "page",
    "global": false,
    "description": "The controlled value of the current page. Can be binded as `v-model:page`.",
    "tags": [],
    "required": false,
    "type": "number | undefined",
    "schema": {
      "kind": "enum",
      "type": "number | undefined",
      "schema": {
        "0": "undefined",
        "1": "number"
      }
    }
  },
  {
    "name": "prevIcon",
    "global": false,
    "description": "The icon to use for the previous page control.",
    "tags": [
      {
        "name": "defaultValue",
        "text": "appConfig.pohon.icons.chevronLeft"
      },
      {
        "name": "IconifyIcon"
      }
    ],
    "required": false,
    "type": "string | object | undefined",
    "schema": {
      "kind": "enum",
      "type": "string | object | undefined",
      "schema": {
        "0": "undefined",
        "1": "string",
        "2": "object"
      }
    }
  },
  {
    "name": "showControls",
    "global": false,
    "description": "Whether to show the first, previous, next, and last controls.",
    "tags": [
      {
        "name": "defaultValue",
        "text": "true"
      }
    ],
    "required": false,
    "type": "boolean | undefined",
    "schema": {
      "kind": "enum",
      "type": "boolean | undefined",
      "schema": {
        "0": "undefined",
        "1": "false",
        "2": "true"
      }
    },
    "default": "true"
  },
  {
    "name": "showEdges",
    "global": false,
    "description": "When `true`, always show first page, last page, and ellipsis",
    "tags": [],
    "required": false,
    "type": "boolean | undefined",
    "schema": {
      "kind": "enum",
      "type": "boolean | undefined",
      "schema": {
        "0": "undefined",
        "1": "false",
        "2": "true"
      }
    },
    "default": "false"
  },
  {
    "name": "siblingCount",
    "global": false,
    "description": "Number of sibling should be shown around the current page",
    "tags": [],
    "required": false,
    "type": "number | undefined",
    "schema": {
      "kind": "enum",
      "type": "number | undefined",
      "schema": {
        "0": "undefined",
        "1": "number"
      }
    },
    "default": "2"
  },
  {
    "name": "size",
    "global": false,
    "description": "",
    "tags": [],
    "required": false,
    "type": "'md' | 'xs' | 'sm' | 'lg' | 'xl' | undefined",
    "schema": {
      "kind": "enum",
      "type": "'md' | 'xs' | 'sm' | 'lg' | 'xl' | undefined",
      "schema": {
        "0": "undefined",
        "1": "'md'",
        "2": "'xs'",
        "3": "'sm'",
        "4": "'lg'",
        "5": "'xl'"
      }
    }
  },
  {
    "name": "to",
    "global": false,
    "description": "A function to render page controls as links.",
    "tags": [
      {
        "name": "param",
        "text": "page The page number to navigate to."
      }
    ],
    "required": false,
    "type": "((page: number) => string | RouteLocationAsRelativeGeneric | RouteLocationAsPathGeneric | undefined) | undefined",
    "schema": {
      "kind": "enum",
      "type": "((page: number) => string | RouteLocationAsRelativeGeneric | RouteLocationAsPathGeneric | undefined) | undefined",
      "schema": {
        "0": "undefined",
        "1": {
          "kind": "event",
          "type": "(page: number): string | RouteLocationAsRelativeGeneric | RouteLocationAsPathGeneric | undefined",
          "schema": []
        }
      }
    }
  },
  {
    "name": "total",
    "global": false,
    "description": "Number of items in your list",
    "tags": [],
    "required": false,
    "type": "number | undefined",
    "schema": {
      "kind": "enum",
      "type": "number | undefined",
      "schema": {
        "0": "undefined",
        "1": "number"
      }
    },
    "default": "0"
  },
  {
    "name": "variant",
    "global": false,
    "description": "The variant of the pagination controls.",
    "tags": [
      {
        "name": "defaultValue",
        "text": "'outline'"
      }
    ],
    "required": false,
    "type": "'link' | 'solid' | 'outline' | 'soft' | 'subtle' | 'ghost' | undefined",
    "schema": {
      "kind": "enum",
      "type": "'link' | 'solid' | 'outline' | 'soft' | 'subtle' | 'ghost' | undefined",
      "schema": {
        "0": "undefined",
        "1": "'link'",
        "2": "'solid'",
        "3": "'outline'",
        "4": "'soft'",
        "5": "'subtle'",
        "6": "'ghost'"
      }
    },
    "default": "'outline'"
  },
  {
    "name": "pohon",
    "global": false,
    "description": "",
    "tags": [],
    "required": false,
    "type": "{ root?: ClassValue; list?: ClassValue; ellipsis?: ClassValue; label?: ClassValue; first?: ClassValue; prev?: ClassValue; item?: ClassValue; next?: ClassValue; last?: ClassValue; } | undefined",
    "schema": {
      "kind": "enum",
      "type": "{ root?: ClassValue; list?: ClassValue; ellipsis?: ClassValue; label?: ClassValue; first?: ClassValue; prev?: ClassValue; item?: ClassValue; next?: ClassValue; last?: ClassValue; } | undefined",
      "schema": {
        "0": "undefined",
        "1": "{ root?: ClassValue; list?: ClassValue; ellipsis?: ClassValue; label?: ClassValue; first?: ClassValue; prev?: ClassValue; item?: ClassValue; next?: ClassValue; last?: ClassValue; }"
      }
    }
  }
],
  "slots": [
  {
    "name": "first",
    "type": "object | undefined",
    "description": "",
    "schema": {
      "kind": "enum",
      "type": "object | undefined",
      "schema": {
        "0": "undefined",
        "1": "object"
      }
    }
  },
  {
    "name": "prev",
    "type": "object | undefined",
    "description": "",
    "schema": {
      "kind": "enum",
      "type": "object | undefined",
      "schema": {
        "0": "undefined",
        "1": "object"
      }
    }
  },
  {
    "name": "next",
    "type": "object | undefined",
    "description": "",
    "schema": {
      "kind": "enum",
      "type": "object | undefined",
      "schema": {
        "0": "undefined",
        "1": "object"
      }
    }
  },
  {
    "name": "last",
    "type": "object | undefined",
    "description": "",
    "schema": {
      "kind": "enum",
      "type": "object | undefined",
      "schema": {
        "0": "undefined",
        "1": "object"
      }
    }
  },
  {
    "name": "ellipsis",
    "type": "object | undefined",
    "description": "",
    "schema": {
      "kind": "enum",
      "type": "object | undefined",
      "schema": {
        "0": "undefined",
        "1": "object"
      }
    }
  },
  {
    "name": "item",
    "type": "{ page: number; pageCount: number; item: { type: 'ellipsis'; } | { type: 'page'; value: number; }; index: number; }",
    "description": "",
    "schema": {
      "kind": "object",
      "type": "{ page: number; pageCount: number; item: { type: 'ellipsis'; } | { type: 'page'; value: number; }; index: number; }",
      "schema": {
        "page": {
          "name": "page",
          "global": false,
          "description": "",
          "tags": [],
          "required": true,
          "type": "number",
          "schema": "number"
        },
        "pageCount": {
          "name": "pageCount",
          "global": false,
          "description": "",
          "tags": [],
          "required": true,
          "type": "number",
          "schema": "number"
        },
        "item": {
          "name": "item",
          "global": false,
          "description": "",
          "tags": [],
          "required": true,
          "type": "{ type: 'ellipsis'; } | { type: 'page'; value: number; }",
          "schema": {
            "kind": "enum",
            "type": "{ type: 'ellipsis'; } | { type: 'page'; value: number; }",
            "schema": {
              "0": {
                "kind": "object",
                "type": "{ type: 'ellipsis'; }",
                "schema": {
                  "type": {
                    "name": "type",
                    "global": false,
                    "description": "",
                    "tags": [],
                    "required": true,
                    "type": "'ellipsis'",
                    "schema": "'ellipsis'"
                  }
                }
              },
              "1": {
                "kind": "object",
                "type": "{ type: 'page'; value: number; }",
                "schema": {
                  "type": {
                    "name": "type",
                    "global": false,
                    "description": "",
                    "tags": [],
                    "required": true,
                    "type": "'page'",
                    "schema": "'page'"
                  },
                  "value": {
                    "name": "value",
                    "global": false,
                    "description": "",
                    "tags": [],
                    "required": true,
                    "type": "number",
                    "schema": "number"
                  }
                }
              }
            }
          }
        },
        "index": {
          "name": "index",
          "global": false,
          "description": "",
          "tags": [],
          "required": true,
          "type": "number",
          "schema": "number"
        }
      }
    }
  }
],
  "events": [
  {
    "name": "update:page",
    "description": "",
    "tags": [],
    "type": "[value: number]",
    "signature": "(event: 'update:page', value: number): void",
    "schema": [
      "number"
    ]
  }
],
  "exposed": [
  {
    "name": "$slots",
    "type": "Readonly<InternalSlots> & PPaginationSlots",
    "description": "",
    "schema": {
      "kind": "object",
      "type": "Readonly<InternalSlots> & PPaginationSlots",
      "schema": {
        "first": {
          "name": "first",
          "global": false,
          "description": "",
          "tags": [],
          "required": true,
          "type": "(props?: object | undefined) => any",
          "schema": {
            "kind": "event",
            "type": "(props?: object | undefined): any",
            "schema": {}
          }
        },
        "prev": {
          "name": "prev",
          "global": false,
          "description": "",
          "tags": [],
          "required": true,
          "type": "(props?: object | undefined) => any",
          "schema": {
            "kind": "event",
            "type": "(props?: object | undefined): any",
            "schema": {}
          }
        },
        "next": {
          "name": "next",
          "global": false,
          "description": "",
          "tags": [],
          "required": true,
          "type": "(props?: object | undefined) => any",
          "schema": {
            "kind": "event",
            "type": "(props?: object | undefined): any",
            "schema": {}
          }
        },
        "last": {
          "name": "last",
          "global": false,
          "description": "",
          "tags": [],
          "required": true,
          "type": "(props?: object | undefined) => any",
          "schema": {
            "kind": "event",
            "type": "(props?: object | undefined): any",
            "schema": {}
          }
        },
        "ellipsis": {
          "name": "ellipsis",
          "global": false,
          "description": "",
          "tags": [],
          "required": true,
          "type": "(props?: object | undefined) => any",
          "schema": {
            "kind": "event",
            "type": "(props?: object | undefined): any",
            "schema": {}
          }
        },
        "item": {
          "name": "item",
          "global": false,
          "description": "",
          "tags": [],
          "required": true,
          "type": "(props: { page: number; pageCount: number; item: { type: 'ellipsis'; } | { type: 'page'; value: number; }; index: number; }) => any",
          "schema": {
            "kind": "event",
            "type": "(props: { page: number; pageCount: number; item: { type: 'ellipsis'; } | { type: 'page'; value: number; }; index: number; }): any",
            "schema": {}
          }
        }
      }
    }
  },
  {
    "name": "color",
    "type": "'error' | 'primary' | 'secondary' | 'success' | 'info' | 'warning' | 'neutral'",
    "description": "The color of the pagination controls.",
    "schema": {
      "kind": "enum",
      "type": "'error' | 'primary' | 'secondary' | 'success' | 'info' | 'warning' | 'neutral'",
      "schema": {
        "0": "'error'",
        "1": "'primary'",
        "2": "'secondary'",
        "3": "'success'",
        "4": "'info'",
        "5": "'warning'",
        "6": "'neutral'"
      }
    }
  },
  {
    "name": "variant",
    "type": "'link' | 'solid' | 'outline' | 'soft' | 'subtle' | 'ghost'",
    "description": "The variant of the pagination controls.",
    "schema": {
      "kind": "enum",
      "type": "'link' | 'solid' | 'outline' | 'soft' | 'subtle' | 'ghost'",
      "schema": {
        "0": "'link'",
        "1": "'solid'",
        "2": "'outline'",
        "3": "'soft'",
        "4": "'subtle'",
        "5": "'ghost'"
      }
    }
  },
  {
    "name": "activeColor",
    "type": "'error' | 'primary' | 'secondary' | 'success' | 'info' | 'warning' | 'neutral'",
    "description": "The color of the active pagination control.",
    "schema": {
      "kind": "enum",
      "type": "'error' | 'primary' | 'secondary' | 'success' | 'info' | 'warning' | 'neutral'",
      "schema": {
        "0": "'error'",
        "1": "'primary'",
        "2": "'secondary'",
        "3": "'success'",
        "4": "'info'",
        "5": "'warning'",
        "6": "'neutral'"
      }
    }
  },
  {
    "name": "activeVariant",
    "type": "'link' | 'solid' | 'outline' | 'soft' | 'subtle' | 'ghost'",
    "description": "The variant of the active pagination control.",
    "schema": {
      "kind": "enum",
      "type": "'link' | 'solid' | 'outline' | 'soft' | 'subtle' | 'ghost'",
      "schema": {
        "0": "'link'",
        "1": "'solid'",
        "2": "'outline'",
        "3": "'soft'",
        "4": "'subtle'",
        "5": "'ghost'"
      }
    }
  },
  {
    "name": "itemsPerPage",
    "type": "number",
    "description": "Number of items per page",
    "schema": "number"
  },
  {
    "name": "showEdges",
    "type": "boolean",
    "description": "When `true`, always show first page, last page, and ellipsis",
    "schema": {
      "kind": "enum",
      "type": "boolean",
      "schema": {
        "0": "false",
        "1": "true"
      }
    }
  },
  {
    "name": "siblingCount",
    "type": "number",
    "description": "Number of sibling should be shown around the current page",
    "schema": "number"
  },
  {
    "name": "total",
    "type": "number",
    "description": "Number of items in your list",
    "schema": "number"
  },
  {
    "name": "showControls",
    "type": "boolean",
    "description": "Whether to show the first, previous, next, and last controls.",
    "schema": {
      "kind": "enum",
      "type": "boolean",
      "schema": {
        "0": "false",
        "1": "true"
      }
    }
  },
  {
    "name": "disabled",
    "type": "boolean | undefined",
    "description": "When `true`, prevents the user from interacting with item",
    "schema": {
      "kind": "enum",
      "type": "boolean | undefined",
      "schema": {
        "0": "undefined",
        "1": "false",
        "2": "true"
      }
    }
  },
  {
    "name": "as",
    "type": "APrimitiveAsTag | Component | undefined",
    "description": "The element or component this component should render as.",
    "schema": {
      "kind": "enum",
      "type": "APrimitiveAsTag | Component | undefined",
      "schema": {
        "0": "undefined",
        "1": "'a'",
        "2": "'button'",
        "3": "'div'",
        "4": "'form'",
        "5": "'h2'",
        "6": "'h3'",
        "7": "'img'",
        "8": "'input'",
        "9": "'label'",
        "10": "'li'",
        "11": "'nav'",
        "12": "'ol'",
        "13": "'p'",
        "14": "'span'",
        "15": "'svg'",
        "16": "'template'",
        "17": "'ul'",
        "18": {
          "kind": "object",
          "type": "string & {}",
          "schema": {}
        },
        "19": {
          "kind": "object",
          "type": "ComponentOptions<any, any, any, ComputedOptions, MethodOptions, any, any, any, string, {}, {}, string, {}, {}, {}, string, ComponentProvideOptions>",
          "schema": {
            "beforeRouteEnter": {
              "name": "beforeRouteEnter",
              "global": false,
              "description": "Guard called when the router is navigating to the route that is rendering\nthis component from a different route. Differently from `beforeRouteUpdate`\nand `beforeRouteLeave`, `beforeRouteEnter` does not have access to the\ncomponent instance through `this` because it triggers before the component\nis even mounted.",
              "tags": [
                {
                  "name": "param",
                  "text": "to - RouteLocationRaw we are navigating to"
                },
                {
                  "name": "param",
                  "text": "from - RouteLocationRaw we are navigating from"
                },
                {
                  "name": "param",
                  "text": "next - function to validate, cancel or modify (by redirecting) the\nnavigation"
                }
              ],
              "required": false,
              "type": "NavigationGuardWithThis<undefined> | undefined",
              "schema": {
                "kind": "enum",
                "type": "NavigationGuardWithThis<undefined> | undefined",
                "schema": {
                  "0": "undefined",
                  "1": {
                    "kind": "event",
                    "type": "(this: undefined, to: RouteLocationNormalizedGeneric, from: RouteLocationNormalizedLoadedGeneric, next: NavigationGuardNext): _Awaitable<...>",
                    "schema": []
                  }
                }
              }
            },
            "beforeRouteUpdate": {
              "name": "beforeRouteUpdate",
              "global": false,
              "description": "Guard called whenever the route that renders this component has changed, but\nit is reused for the new route. This allows you to guard for changes in\nparams, the query or the hash.",
              "tags": [
                {
                  "name": "param",
                  "text": "to - RouteLocationRaw we are navigating to"
                },
                {
                  "name": "param",
                  "text": "from - RouteLocationRaw we are navigating from"
                },
                {
                  "name": "param",
                  "text": "next - function to validate, cancel or modify (by redirecting) the\nnavigation"
                }
              ],
              "required": false,
              "type": "NavigationGuard | undefined",
              "schema": {
                "kind": "enum",
                "type": "NavigationGuard | undefined",
                "schema": {
                  "0": "undefined",
                  "1": {
                    "kind": "event",
                    "type": "(to: RouteLocationNormalizedGeneric, from: RouteLocationNormalizedLoadedGeneric, next: NavigationGuardNext): _Awaitable<...>",
                    "schema": []
                  }
                }
              }
            },
            "beforeRouteLeave": {
              "name": "beforeRouteLeave",
              "global": false,
              "description": "Guard called when the router is navigating away from the current route that\nis rendering this component.",
              "tags": [
                {
                  "name": "param",
                  "text": "to - RouteLocationRaw we are navigating to"
                },
                {
                  "name": "param",
                  "text": "from - RouteLocationRaw we are navigating from"
                },
                {
                  "name": "param",
                  "text": "next - function to validate, cancel or modify (by redirecting) the\nnavigation"
                }
              ],
              "required": false,
              "type": "NavigationGuard | undefined",
              "schema": "NavigationGuard | undefined"
            },
            "head": {
              "name": "head",
              "global": false,
              "description": "Available exclusively for `defineNuxtComponent`.\nIt will not be executed when using `defineComponent`.",
              "tags": [],
              "required": false,
              "type": "((nuxtApp: NuxtApp) => U<Deprecated>) | undefined",
              "schema": {
                "kind": "enum",
                "type": "((nuxtApp: NuxtApp) => U<Deprecated>) | undefined",
                "schema": {
                  "0": "undefined",
                  "1": {
                    "kind": "event",
                    "type": "(nuxtApp: NuxtApp): UseHeadInput<Deprecated>",
                    "schema": []
                  }
                }
              }
            }
          }
        },
        "20": {
          "kind": "event",
          "type": "(props: any, ctx: Omit<{ attrs: Data; slots: Readonly<InternalSlots>; emit: (event: string, ...args: any[]) => void; expose: <Exposed extends Record<string, any> = Record<string, any>>(exposed?: Exposed | undefined) => void; }, 'expose'>): any",
          "schema": []
        },
        "21": {
          "kind": "object",
          "type": "ComponentPublicInstanceConstructor<any, any, any, any, ComputedOptions, MethodOptions>",
          "schema": {}
        }
      }
    }
  },
  {
    "name": "class",
    "type": "any",
    "description": "",
    "schema": "any"
  },
  {
    "name": "pohon",
    "type": "{ root?: ClassValue; list?: ClassValue; ellipsis?: ClassValue; label?: ClassValue; first?: ClassValue; prev?: ClassValue; item?: ClassValue; next?: ClassValue; last?: ClassValue; } | undefined",
    "description": "",
    "schema": {
      "kind": "enum",
      "type": "{ root?: ClassValue; list?: ClassValue; ellipsis?: ClassValue; label?: ClassValue; first?: ClassValue; prev?: ClassValue; item?: ClassValue; next?: ClassValue; last?: ClassValue; } | undefined",
      "schema": {
        "0": "undefined",
        "1": "{ root?: ClassValue; list?: ClassValue; ellipsis?: ClassValue; label?: ClassValue; first?: ClassValue; prev?: ClassValue; item?: ClassValue; next?: ClassValue; last?: ClassValue; }"
      }
    }
  },
  {
    "name": "size",
    "type": "'md' | 'xs' | 'sm' | 'lg' | 'xl' | undefined",
    "description": "",
    "schema": {
      "kind": "enum",
      "type": "'md' | 'xs' | 'sm' | 'lg' | 'xl' | undefined",
      "schema": {
        "0": "undefined",
        "1": "'md'",
        "2": "'xs'",
        "3": "'sm'",
        "4": "'lg'",
        "5": "'xl'"
      }
    }
  },
  {
    "name": "to",
    "type": "((page: number) => string | RouteLocationAsRelativeGeneric | RouteLocationAsPathGeneric | undefined) | undefined",
    "description": "A function to render page controls as links.",
    "schema": {
      "kind": "enum",
      "type": "((page: number) => string | RouteLocationAsRelativeGeneric | RouteLocationAsPathGeneric | undefined) | undefined",
      "schema": {
        "0": "undefined",
        "1": {
          "kind": "event",
          "type": "(page: number): string | RouteLocationAsRelativeGeneric | RouteLocationAsPathGeneric | undefined",
          "schema": []
        }
      }
    }
  },
  {
    "name": "page",
    "type": "number | undefined",
    "description": "The controlled value of the current page. Can be binded as `v-model:page`.",
    "schema": {
      "kind": "enum",
      "type": "number | undefined",
      "schema": {
        "0": "undefined",
        "1": "number"
      }
    }
  },
  {
    "name": "prevIcon",
    "type": "string | object | undefined",
    "description": "The icon to use for the previous page control.",
    "schema": {
      "kind": "enum",
      "type": "string | object | undefined",
      "schema": {
        "0": "undefined",
        "1": "string",
        "2": "object"
      }
    }
  },
  {
    "name": "nextIcon",
    "type": "string | object | undefined",
    "description": "The icon to use for the next page control.",
    "schema": {
      "kind": "enum",
      "type": "string | object | undefined",
      "schema": {
        "0": "undefined",
        "1": "string",
        "2": "object"
      }
    }
  },
  {
    "name": "defaultPage",
    "type": "number | undefined",
    "description": "The value of the page that should be active when initially rendered.\n\nUse when you do not need to control the value state.",
    "schema": {
      "kind": "enum",
      "type": "number | undefined",
      "schema": {
        "0": "undefined",
        "1": "number"
      }
    }
  },
  {
    "name": "firstIcon",
    "type": "string | object | undefined",
    "description": "The icon to use for the first page control.",
    "schema": {
      "kind": "enum",
      "type": "string | object | undefined",
      "schema": {
        "0": "undefined",
        "1": "string",
        "2": "object"
      }
    }
  },
  {
    "name": "lastIcon",
    "type": "string | object | undefined",
    "description": "The icon to use for the last page control.",
    "schema": {
      "kind": "enum",
      "type": "string | object | undefined",
      "schema": {
        "0": "undefined",
        "1": "string",
        "2": "object"
      }
    }
  },
  {
    "name": "ellipsisIcon",
    "type": "string | object | undefined",
    "description": "The icon to use for the ellipsis control.",
    "schema": {
      "kind": "enum",
      "type": "string | object | undefined",
      "schema": {
        "0": "undefined",
        "1": "string",
        "2": "object"
      }
    }
  },
  {
    "name": "onUpdate:page",
    "type": "((value: number) => any) | undefined",
    "description": "",
    "schema": {
      "kind": "enum",
      "type": "((value: number) => any) | undefined",
      "schema": {
        "0": "undefined",
        "1": {
          "kind": "event",
          "type": "(value: number): any",
          "schema": [
            "number"
          ]
        }
      }
    }
  }
]
}
