{
  "props": [
  {
    "name": "as",
    "global": false,
    "description": "The element or component this component should render as.\n\nRead our [primitive tag](https://akar.vinicunca.dev/core/guides/primitive-tag) guide for more details.",
    "tags": [
      {
        "name": "defaultValue",
        "text": "'div'"
      }
    ],
    "required": false,
    "type": "APrimitiveAsTag | Component | undefined",
    "schema": "any"
  },
  {
    "name": "defaultValue",
    "global": false,
    "description": "The default value of the color picker",
    "tags": [],
    "required": false,
    "type": "string | undefined",
    "schema": {
      "kind": "enum",
      "type": "string | undefined",
      "schema": {
        "0": "undefined",
        "1": "string"
      }
    },
    "default": "'#FFFFFF'"
  },
  {
    "name": "disabled",
    "global": false,
    "description": "Disable the color picker",
    "tags": [],
    "required": false,
    "type": "boolean | undefined",
    "schema": {
      "kind": "enum",
      "type": "boolean | undefined",
      "schema": {
        "0": "undefined",
        "1": "false",
        "2": "true"
      }
    }
  },
  {
    "name": "format",
    "global": false,
    "description": "Format of the color",
    "tags": [
      {
        "name": "defaultValue",
        "text": "'hex'"
      }
    ],
    "required": false,
    "type": "'hex' | 'rgb' | 'hsl' | 'cmyk' | 'lab' | undefined",
    "schema": {
      "kind": "enum",
      "type": "'hex' | 'rgb' | 'hsl' | 'cmyk' | 'lab' | undefined",
      "schema": {
        "0": "undefined",
        "1": "'hex'",
        "2": "'rgb'",
        "3": "'hsl'",
        "4": "'cmyk'",
        "5": "'lab'"
      }
    },
    "default": "'hex'"
  },
  {
    "name": "modelValue",
    "global": false,
    "description": "",
    "tags": [],
    "required": false,
    "type": "string | undefined",
    "schema": {
      "kind": "enum",
      "type": "string | undefined",
      "schema": {
        "0": "undefined",
        "1": "string"
      }
    }
  },
  {
    "name": "size",
    "global": false,
    "description": "",
    "tags": [
      {
        "name": "defaultValue",
        "text": "'md'"
      }
    ],
    "required": false,
    "type": "'md' | 'xs' | 'sm' | 'lg' | 'xl' | undefined",
    "schema": {
      "kind": "enum",
      "type": "'md' | 'xs' | 'sm' | 'lg' | 'xl' | undefined",
      "schema": {
        "0": "undefined",
        "1": "'md'",
        "2": "'xs'",
        "3": "'sm'",
        "4": "'lg'",
        "5": "'xl'"
      }
    }
  },
  {
    "name": "throttle",
    "global": false,
    "description": "Throttle time in ms for the color picker",
    "tags": [],
    "required": false,
    "type": "number | undefined",
    "schema": {
      "kind": "enum",
      "type": "number | undefined",
      "schema": {
        "0": "undefined",
        "1": "number"
      }
    },
    "default": "50"
  },
  {
    "name": "pohon",
    "global": false,
    "description": "",
    "tags": [],
    "required": false,
    "type": "{ root?: ClassValue; picker?: ClassValue; selector?: ClassValue; selectorBackground?: ClassValue; selectorThumb?: ClassValue; track?: ClassValue; trackThumb?: ClassValue; } | undefined",
    "schema": {
      "kind": "enum",
      "type": "{ root?: ClassValue; picker?: ClassValue; selector?: ClassValue; selectorBackground?: ClassValue; selectorThumb?: ClassValue; track?: ClassValue; trackThumb?: ClassValue; } | undefined",
      "schema": {
        "0": "undefined",
        "1": "{ root?: ClassValue; picker?: ClassValue; selector?: ClassValue; selectorBackground?: ClassValue; selectorThumb?: ClassValue; track?: ClassValue; trackThumb?: ClassValue; }"
      }
    }
  }
],
  "slots": [],
  "events": [
  {
    "name": "update:modelValue",
    "description": "",
    "tags": [],
    "type": "[value: string | undefined]",
    "signature": "(event: 'update:modelValue', value: string | undefined): void",
    "schema": [
      {
        "kind": "enum",
        "type": "string | undefined",
        "schema": [
          "undefined",
          "string"
        ]
      }
    ]
  }
],
  "exposed": [
  {
    "name": "defaultValue",
    "type": "string",
    "description": "The default value of the color picker",
    "schema": "string"
  },
  {
    "name": "throttle",
    "type": "number",
    "description": "Throttle time in ms for the color picker",
    "schema": "number"
  },
  {
    "name": "format",
    "type": "'hex' | 'rgb' | 'hsl' | 'cmyk' | 'lab'",
    "description": "Format of the color",
    "schema": {
      "kind": "enum",
      "type": "'hex' | 'rgb' | 'hsl' | 'cmyk' | 'lab'",
      "schema": {
        "0": "'hex'",
        "1": "'rgb'",
        "2": "'hsl'",
        "3": "'cmyk'",
        "4": "'lab'"
      }
    }
  },
  {
    "name": "modelValue",
    "type": "string | undefined",
    "description": "",
    "schema": {
      "kind": "enum",
      "type": "string | undefined",
      "schema": {
        "0": "undefined",
        "1": "string"
      }
    }
  },
  {
    "name": "disabled",
    "type": "boolean | undefined",
    "description": "Disable the color picker",
    "schema": {
      "kind": "enum",
      "type": "boolean | undefined",
      "schema": {
        "0": "undefined",
        "1": "false",
        "2": "true"
      }
    }
  },
  {
    "name": "onUpdate:modelValue",
    "type": "((value: string | undefined) => any) | undefined",
    "description": "",
    "schema": {
      "kind": "enum",
      "type": "((value: string | undefined) => any) | undefined",
      "schema": {
        "0": "undefined",
        "1": {
          "kind": "event",
          "type": "(value: string | undefined): any",
          "schema": [
            {
              "kind": "enum",
              "type": "string | undefined",
              "schema": [
                "undefined",
                "string"
              ]
            }
          ]
        }
      }
    }
  },
  {
    "name": "as",
    "type": "APrimitiveAsTag | Component | undefined",
    "description": "The element or component this component should render as.",
    "schema": {
      "kind": "enum",
      "type": "APrimitiveAsTag | Component | undefined",
      "schema": {
        "0": "undefined",
        "1": "'a'",
        "2": "'button'",
        "3": "'div'",
        "4": "'form'",
        "5": "'h2'",
        "6": "'h3'",
        "7": "'img'",
        "8": "'input'",
        "9": "'label'",
        "10": "'li'",
        "11": "'nav'",
        "12": "'ol'",
        "13": "'p'",
        "14": "'span'",
        "15": "'svg'",
        "16": "'template'",
        "17": "'ul'",
        "18": {
          "kind": "object",
          "type": "string & {}",
          "schema": {}
        },
        "19": {
          "kind": "object",
          "type": "ComponentOptions<any, any, any, ComputedOptions, MethodOptions, any, any, any, string, {}, {}, string, {}, {}, {}, string, ComponentProvideOptions>",
          "schema": {
            "beforeRouteEnter": {
              "name": "beforeRouteEnter",
              "global": false,
              "description": "Guard called when the router is navigating to the route that is rendering\nthis component from a different route. Differently from `beforeRouteUpdate`\nand `beforeRouteLeave`, `beforeRouteEnter` does not have access to the\ncomponent instance through `this` because it triggers before the component\nis even mounted.",
              "tags": [
                {
                  "name": "param",
                  "text": "to - RouteLocationRaw we are navigating to"
                },
                {
                  "name": "param",
                  "text": "from - RouteLocationRaw we are navigating from"
                },
                {
                  "name": "param",
                  "text": "next - function to validate, cancel or modify (by redirecting) the\nnavigation"
                }
              ],
              "required": false,
              "type": "NavigationGuardWithThis<undefined> | undefined",
              "schema": {
                "kind": "enum",
                "type": "NavigationGuardWithThis<undefined> | undefined",
                "schema": {
                  "0": "undefined",
                  "1": {
                    "kind": "event",
                    "type": "(this: undefined, to: RouteLocationNormalizedGeneric, from: RouteLocationNormalizedLoadedGeneric, next: NavigationGuardNext): _Awaitable<...>",
                    "schema": []
                  }
                }
              }
            },
            "beforeRouteUpdate": {
              "name": "beforeRouteUpdate",
              "global": false,
              "description": "Guard called whenever the route that renders this component has changed, but\nit is reused for the new route. This allows you to guard for changes in\nparams, the query or the hash.",
              "tags": [
                {
                  "name": "param",
                  "text": "to - RouteLocationRaw we are navigating to"
                },
                {
                  "name": "param",
                  "text": "from - RouteLocationRaw we are navigating from"
                },
                {
                  "name": "param",
                  "text": "next - function to validate, cancel or modify (by redirecting) the\nnavigation"
                }
              ],
              "required": false,
              "type": "NavigationGuard | undefined",
              "schema": {
                "kind": "enum",
                "type": "NavigationGuard | undefined",
                "schema": {
                  "0": "undefined",
                  "1": {
                    "kind": "event",
                    "type": "(to: RouteLocationNormalizedGeneric, from: RouteLocationNormalizedLoadedGeneric, next: NavigationGuardNext): _Awaitable<...>",
                    "schema": []
                  }
                }
              }
            },
            "beforeRouteLeave": {
              "name": "beforeRouteLeave",
              "global": false,
              "description": "Guard called when the router is navigating away from the current route that\nis rendering this component.",
              "tags": [
                {
                  "name": "param",
                  "text": "to - RouteLocationRaw we are navigating to"
                },
                {
                  "name": "param",
                  "text": "from - RouteLocationRaw we are navigating from"
                },
                {
                  "name": "param",
                  "text": "next - function to validate, cancel or modify (by redirecting) the\nnavigation"
                }
              ],
              "required": false,
              "type": "NavigationGuard | undefined",
              "schema": "NavigationGuard | undefined"
            },
            "head": {
              "name": "head",
              "global": false,
              "description": "Available exclusively for `defineNuxtComponent`.\nIt will not be executed when using `defineComponent`.",
              "tags": [],
              "required": false,
              "type": "((nuxtApp: NuxtApp) => U<Deprecated>) | undefined",
              "schema": {
                "kind": "enum",
                "type": "((nuxtApp: NuxtApp) => U<Deprecated>) | undefined",
                "schema": {
                  "0": "undefined",
                  "1": {
                    "kind": "event",
                    "type": "(nuxtApp: NuxtApp): UseHeadInput<Deprecated>",
                    "schema": []
                  }
                }
              }
            }
          }
        },
        "20": {
          "kind": "event",
          "type": "(props: any, ctx: Omit<{ attrs: Data; slots: Readonly<InternalSlots>; emit: (event: string, ...args: any[]) => void; expose: <Exposed extends Record<string, any> = Record<string, any>>(exposed?: Exposed | undefined) => void; }, 'expose'>): any",
          "schema": []
        },
        "21": {
          "kind": "object",
          "type": "ComponentPublicInstanceConstructor<any, any, any, any, ComputedOptions, MethodOptions>",
          "schema": {}
        }
      }
    }
  },
  {
    "name": "class",
    "type": "any",
    "description": "",
    "schema": "any"
  },
  {
    "name": "pohon",
    "type": "{ root?: ClassValue; picker?: ClassValue; selector?: ClassValue; selectorBackground?: ClassValue; selectorThumb?: ClassValue; track?: ClassValue; trackThumb?: ClassValue; } | undefined",
    "description": "",
    "schema": {
      "kind": "enum",
      "type": "{ root?: ClassValue; picker?: ClassValue; selector?: ClassValue; selectorBackground?: ClassValue; selectorThumb?: ClassValue; track?: ClassValue; trackThumb?: ClassValue; } | undefined",
      "schema": {
        "0": "undefined",
        "1": "{ root?: ClassValue; picker?: ClassValue; selector?: ClassValue; selectorBackground?: ClassValue; selectorThumb?: ClassValue; track?: ClassValue; trackThumb?: ClassValue; }"
      }
    }
  },
  {
    "name": "size",
    "type": "'md' | 'xs' | 'sm' | 'lg' | 'xl' | undefined",
    "description": "",
    "schema": {
      "kind": "enum",
      "type": "'md' | 'xs' | 'sm' | 'lg' | 'xl' | undefined",
      "schema": {
        "0": "undefined",
        "1": "'md'",
        "2": "'xs'",
        "3": "'sm'",
        "4": "'lg'",
        "5": "'xl'"
      }
    }
  }
]
}
