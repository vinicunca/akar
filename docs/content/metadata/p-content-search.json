{
  "props": [
  {
    "name": "autofocus",
    "global": false,
    "description": "Automatically focus the input when component is mounted.",
    "tags": [
      {
        "name": "defaultValue",
        "text": "true"
      }
    ],
    "required": false,
    "type": "boolean | undefined",
    "schema": {
      "kind": "enum",
      "type": "boolean | undefined",
      "schema": {
        "0": "undefined",
        "1": "false",
        "2": "true"
      }
    }
  },
  {
    "name": "close",
    "global": false,
    "description": "Display a close button in the input (useful when inside a Dialog for example).\n`{ size: 'md', color: 'neutral', variant: 'ghost' }`{lang='ts-type'}",
    "tags": [
      {
        "name": "emits",
        "text": "'update:open'"
      },
      {
        "name": "defaultValue",
        "text": "true"
      }
    ],
    "required": false,
    "type": "boolean | Partial<PButtonProps> | undefined",
    "schema": {
      "kind": "enum",
      "type": "boolean | Partial<PButtonProps> | undefined",
      "schema": {
        "0": "undefined",
        "1": "false",
        "2": "true",
        "3": "Partial<PButtonProps>"
      }
    },
    "default": "true"
  },
  {
    "name": "closeIcon",
    "global": false,
    "description": "The icon displayed in the close button.",
    "tags": [
      {
        "name": "defaultValue",
        "text": "appConfig.pohon.icons.close"
      },
      {
        "name": "IconifyIcon"
      }
    ],
    "required": false,
    "type": "string | object | undefined",
    "schema": {
      "kind": "enum",
      "type": "string | object | undefined",
      "schema": {
        "0": "undefined",
        "1": "string",
        "2": "object"
      }
    }
  },
  {
    "name": "colorMode",
    "global": false,
    "description": "When `true`, the theme command will be added to the groups.",
    "tags": [
      {
        "name": "defaultValue",
        "text": "true"
      }
    ],
    "required": false,
    "type": "boolean | undefined",
    "schema": {
      "kind": "enum",
      "type": "boolean | undefined",
      "schema": {
        "0": "undefined",
        "1": "false",
        "2": "true"
      }
    },
    "default": "true"
  },
  {
    "name": "content",
    "global": false,
    "description": "The content of the dialog.",
    "tags": [],
    "required": false,
    "type": "(Omit<ADialogContentProps, 'as' | 'asChild' | 'forceMount'> & Partial<EmitsToProps<DialogContentImplEmits>>) | undefined",
    "schema": {
      "kind": "enum",
      "type": "(Omit<ADialogContentProps, 'as' | 'asChild' | 'forceMount'> & Partial<EmitsToProps<DialogContentImplEmits>>) | undefined",
      "schema": {
        "0": "undefined",
        "1": {
          "kind": "object",
          "type": "Omit<ADialogContentProps, 'as' | 'asChild' | 'forceMount'> & Partial<EmitsToProps<DialogContentImplEmits>>",
          "schema": {
            "disableOutsidePointerEvents": {
              "name": "disableOutsidePointerEvents",
              "global": false,
              "description": "When `true`, hover/focus/click interactions will be disabled on elements outside\nthe `DismissableLayer`. Users will need to click twice on outside elements to\ninteract with them: once to close the `DismissableLayer`, and again to trigger the element.",
              "tags": [],
              "required": false,
              "type": "boolean | undefined",
              "schema": {
                "kind": "enum",
                "type": "boolean | undefined",
                "schema": {
                  "0": "undefined",
                  "1": "false",
                  "2": "true"
                }
              }
            },
            "onEscapeKeyDown": {
              "name": "onEscapeKeyDown",
              "global": false,
              "description": "",
              "tags": [],
              "required": false,
              "type": "((event: KeyboardEvent) => void) | undefined",
              "schema": {
                "kind": "enum",
                "type": "((event: KeyboardEvent) => void) | undefined",
                "schema": {
                  "0": "undefined",
                  "1": {
                    "kind": "event",
                    "type": "(event: KeyboardEvent): void",
                    "schema": [
                      {
                        "kind": "object",
                        "type": "KeyboardEvent",
                        "schema": {}
                      }
                    ]
                  }
                }
              }
            },
            "onPointerDownOutside": {
              "name": "onPointerDownOutside",
              "global": false,
              "description": "",
              "tags": [],
              "required": false,
              "type": "((event: PointerDownOutsideEvent) => void) | undefined",
              "schema": {
                "kind": "enum",
                "type": "((event: PointerDownOutsideEvent) => void) | undefined",
                "schema": {
                  "0": "undefined",
                  "1": {
                    "kind": "event",
                    "type": "(event: PointerDownOutsideEvent): void",
                    "schema": [
                      "PointerDownOutsideEvent"
                    ]
                  }
                }
              }
            },
            "onFocusOutside": {
              "name": "onFocusOutside",
              "global": false,
              "description": "",
              "tags": [],
              "required": false,
              "type": "((event: FocusOutsideEvent) => void) | undefined",
              "schema": {
                "kind": "enum",
                "type": "((event: FocusOutsideEvent) => void) | undefined",
                "schema": {
                  "0": "undefined",
                  "1": {
                    "kind": "event",
                    "type": "(event: FocusOutsideEvent): void",
                    "schema": [
                      "FocusOutsideEvent"
                    ]
                  }
                }
              }
            },
            "onInteractOutside": {
              "name": "onInteractOutside",
              "global": false,
              "description": "",
              "tags": [],
              "required": false,
              "type": "((event: PointerDownOutsideEvent | FocusOutsideEvent) => void) | undefined",
              "schema": {
                "kind": "enum",
                "type": "((event: PointerDownOutsideEvent | FocusOutsideEvent) => void) | undefined",
                "schema": {
                  "0": "undefined",
                  "1": {
                    "kind": "event",
                    "type": "(event: PointerDownOutsideEvent | FocusOutsideEvent): void",
                    "schema": [
                      {
                        "kind": "enum",
                        "type": "PointerDownOutsideEvent | FocusOutsideEvent",
                        "schema": [
                          "PointerDownOutsideEvent",
                          "FocusOutsideEvent"
                        ]
                      }
                    ]
                  }
                }
              }
            },
            "onOpenAutoFocus": {
              "name": "onOpenAutoFocus",
              "global": false,
              "description": "",
              "tags": [],
              "required": false,
              "type": "((event: Event) => void) | undefined",
              "schema": {
                "kind": "enum",
                "type": "((event: Event) => void) | undefined",
                "schema": {
                  "0": "undefined",
                  "1": {
                    "kind": "event",
                    "type": "(event: Event): void",
                    "schema": [
                      {
                        "kind": "object",
                        "type": "Event",
                        "schema": {}
                      }
                    ]
                  }
                }
              }
            },
            "onCloseAutoFocus": {
              "name": "onCloseAutoFocus",
              "global": false,
              "description": "",
              "tags": [],
              "required": false,
              "type": "((event: Event) => void) | undefined",
              "schema": {
                "kind": "enum",
                "type": "((event: Event) => void) | undefined",
                "schema": {
                  "0": "undefined",
                  "1": {
                    "kind": "event",
                    "type": "(event: Event): void",
                    "schema": [
                      "Event"
                    ]
                  }
                }
              }
            }
          }
        }
      }
    }
  },
  {
    "name": "description",
    "global": false,
    "description": "",
    "tags": [],
    "required": false,
    "type": "string | undefined",
    "schema": {
      "kind": "enum",
      "type": "string | undefined",
      "schema": {
        "0": "undefined",
        "1": "string"
      }
    }
  },
  {
    "name": "dismissible",
    "global": false,
    "description": "When `false`, the dialog will not close when clicking outside or pressing escape.",
    "tags": [
      {
        "name": "defaultValue",
        "text": "true"
      }
    ],
    "required": false,
    "type": "boolean | undefined",
    "schema": {
      "kind": "enum",
      "type": "boolean | undefined",
      "schema": {
        "0": "undefined",
        "1": "false",
        "2": "true"
      }
    }
  },
  {
    "name": "files",
    "global": false,
    "description": "",
    "tags": [],
    "required": false,
    "type": "PContentSearchFile[] | undefined",
    "schema": {
      "kind": "enum",
      "type": "PContentSearchFile[] | undefined",
      "schema": {
        "0": "undefined",
        "1": {
          "kind": "array",
          "type": "PContentSearchFile[]",
          "schema": [
            {
              "kind": "object",
              "type": "PContentSearchFile",
              "schema": {
                "id": {
                  "name": "id",
                  "global": false,
                  "description": "",
                  "tags": [],
                  "required": true,
                  "type": "string",
                  "schema": "string"
                },
                "title": {
                  "name": "title",
                  "global": false,
                  "description": "",
                  "tags": [],
                  "required": true,
                  "type": "string",
                  "schema": "string"
                },
                "titles": {
                  "name": "titles",
                  "global": false,
                  "description": "",
                  "tags": [],
                  "required": true,
                  "type": "string[]",
                  "schema": {
                    "kind": "array",
                    "type": "string[]",
                    "schema": {
                      "0": "string"
                    }
                  }
                },
                "level": {
                  "name": "level",
                  "global": false,
                  "description": "",
                  "tags": [],
                  "required": true,
                  "type": "number",
                  "schema": "number"
                },
                "content": {
                  "name": "content",
                  "global": false,
                  "description": "",
                  "tags": [],
                  "required": true,
                  "type": "string",
                  "schema": "string"
                }
              }
            }
          ]
        }
      }
    }
  },
  {
    "name": "fullscreen",
    "global": false,
    "description": "When `true`, the dialog will take up the full screen.",
    "tags": [
      {
        "name": "defaultValue",
        "text": "false"
      }
    ],
    "required": false,
    "type": "boolean | undefined",
    "schema": {
      "kind": "enum",
      "type": "boolean | undefined",
      "schema": {
        "0": "undefined",
        "1": "false",
        "2": "true"
      }
    },
    "default": "false"
  },
  {
    "name": "fuse",
    "global": false,
    "description": "Options for [useFuse](https://vueuse.org/integrations/useFuse) passed to the [CommandPalette](https://akara.vinicunca.dev/pohon/components/command-palette).",
    "tags": [
      {
        "name": "defaultValue",
        "text": "{ fuseOptions: { includeMatches: true } }"
      }
    ],
    "required": false,
    "type": "UseFuseOptions<PContentSearchLink> | undefined",
    "schema": {
      "kind": "enum",
      "type": "UseFuseOptions<PContentSearchLink> | undefined",
      "schema": {
        "0": "undefined",
        "1": "UseFuseOptions<PContentSearchLink>"
      }
    }
  },
  {
    "name": "groups",
    "global": false,
    "description": "Custom groups displayed between navigation and color mode group.",
    "tags": [],
    "required": false,
    "type": "PCommandPaletteGroup<PContentSearchItem>[] | undefined",
    "schema": {
      "kind": "enum",
      "type": "PCommandPaletteGroup<PContentSearchItem>[] | undefined",
      "schema": {
        "0": "undefined",
        "1": {
          "kind": "array",
          "type": "PCommandPaletteGroup<PContentSearchItem>[]",
          "schema": [
            "PCommandPaletteGroup<PContentSearchItem>"
          ]
        }
      }
    }
  },
  {
    "name": "icon",
    "global": false,
    "description": "The icon displayed in the input.",
    "tags": [
      {
        "name": "defaultValue",
        "text": "appConfig.pohon.icons.search"
      },
      {
        "name": "IconifyIcon"
      }
    ],
    "required": false,
    "type": "string | object | undefined",
    "schema": {
      "kind": "enum",
      "type": "string | object | undefined",
      "schema": {
        "0": "undefined",
        "1": "string",
        "2": "object"
      }
    }
  },
  {
    "name": "links",
    "global": false,
    "description": "Links group displayed as the first group in the command palette.",
    "tags": [],
    "required": false,
    "type": "PContentSearchLink[] | undefined",
    "schema": {
      "kind": "enum",
      "type": "PContentSearchLink[] | undefined",
      "schema": {
        "0": "undefined",
        "1": {
          "kind": "array",
          "type": "PContentSearchLink[]",
          "schema": [
            {
              "kind": "object",
              "type": "PContentSearchLink",
              "schema": {
                "label": {
                  "name": "label",
                  "global": false,
                  "description": "",
                  "tags": [],
                  "required": false,
                  "type": "string | undefined",
                  "schema": {
                    "kind": "enum",
                    "type": "string | undefined",
                    "schema": {
                      "0": "undefined",
                      "1": "string"
                    }
                  }
                },
                "description": {
                  "name": "description",
                  "global": false,
                  "description": "",
                  "tags": [],
                  "required": false,
                  "type": "string | undefined",
                  "schema": "string | undefined"
                },
                "icon": {
                  "name": "icon",
                  "global": false,
                  "description": "",
                  "tags": [
                    {
                      "name": "IconifyIcon"
                    }
                  ],
                  "required": false,
                  "type": "string | object | undefined",
                  "schema": {
                    "kind": "enum",
                    "type": "string | object | undefined",
                    "schema": {
                      "0": "undefined",
                      "1": "string",
                      "2": "object"
                    }
                  }
                },
                "children": {
                  "name": "children",
                  "global": false,
                  "description": "",
                  "tags": [],
                  "required": false,
                  "type": "PContentSearchLink[] | undefined",
                  "schema": "PContentSearchLink[] | undefined"
                },
                "type": {
                  "name": "type",
                  "global": false,
                  "description": "The type of the button when not a link.",
                  "tags": [
                    {
                      "name": "defaultValue",
                      "text": "'button'"
                    }
                  ],
                  "required": false,
                  "type": "'button' | 'reset' | 'submit' | undefined",
                  "schema": {
                    "kind": "enum",
                    "type": "'button' | 'reset' | 'submit' | undefined",
                    "schema": {
                      "0": "undefined",
                      "1": "'button'",
                      "2": "'reset'",
                      "3": "'submit'"
                    }
                  }
                },
                "disabled": {
                  "name": "disabled",
                  "global": false,
                  "description": "",
                  "tags": [],
                  "required": false,
                  "type": "boolean | undefined",
                  "schema": {
                    "kind": "enum",
                    "type": "boolean | undefined",
                    "schema": {
                      "0": "undefined",
                      "1": "false",
                      "2": "true"
                    }
                  }
                },
                "as": {
                  "name": "as",
                  "global": false,
                  "description": "The element or component this component should render as when not a link.",
                  "tags": [
                    {
                      "name": "defaultValue",
                      "text": "'button'"
                    }
                  ],
                  "required": false,
                  "type": "APrimitiveAsTag | Component | undefined",
                  "schema": {
                    "kind": "enum",
                    "type": "APrimitiveAsTag | Component | undefined",
                    "schema": {
                      "0": "undefined",
                      "1": "'a'",
                      "2": "'button'",
                      "3": "'div'",
                      "4": "'form'",
                      "5": "'h2'",
                      "6": "'h3'",
                      "7": "'img'",
                      "8": "'input'",
                      "9": "'label'",
                      "10": "'li'",
                      "11": "'nav'",
                      "12": "'ol'",
                      "13": "'p'",
                      "14": "'span'",
                      "15": "'svg'",
                      "16": "'template'",
                      "17": "'ul'",
                      "18": {
                        "kind": "object",
                        "type": "string & {}",
                        "schema": {}
                      },
                      "19": {
                        "kind": "object",
                        "type": "ComponentOptions<any, any, any, ComputedOptions, MethodOptions, any, any, any, string, {}, {}, string, {}, {}, {}, string, ComponentProvideOptions>",
                        "schema": {
                          "beforeRouteEnter": {
                            "name": "beforeRouteEnter",
                            "global": false,
                            "description": "Guard called when the router is navigating to the route that is rendering\nthis component from a different route. Differently from `beforeRouteUpdate`\nand `beforeRouteLeave`, `beforeRouteEnter` does not have access to the\ncomponent instance through `this` because it triggers before the component\nis even mounted.",
                            "tags": [
                              {
                                "name": "param",
                                "text": "to - RouteLocationRaw we are navigating to"
                              },
                              {
                                "name": "param",
                                "text": "from - RouteLocationRaw we are navigating from"
                              },
                              {
                                "name": "param",
                                "text": "next - function to validate, cancel or modify (by redirecting) the\nnavigation"
                              }
                            ],
                            "required": false,
                            "type": "NavigationGuardWithThis<undefined> | undefined",
                            "schema": {
                              "kind": "enum",
                              "type": "NavigationGuardWithThis<undefined> | undefined",
                              "schema": {
                                "0": "undefined",
                                "1": {
                                  "kind": "event",
                                  "type": "(this: undefined, to: RouteLocationNormalizedGeneric, from: RouteLocationNormalizedLoadedGeneric, next: NavigationGuardNext): _Awaitable<...>",
                                  "schema": []
                                }
                              }
                            }
                          },
                          "beforeRouteUpdate": {
                            "name": "beforeRouteUpdate",
                            "global": false,
                            "description": "Guard called whenever the route that renders this component has changed, but\nit is reused for the new route. This allows you to guard for changes in\nparams, the query or the hash.",
                            "tags": [
                              {
                                "name": "param",
                                "text": "to - RouteLocationRaw we are navigating to"
                              },
                              {
                                "name": "param",
                                "text": "from - RouteLocationRaw we are navigating from"
                              },
                              {
                                "name": "param",
                                "text": "next - function to validate, cancel or modify (by redirecting) the\nnavigation"
                              }
                            ],
                            "required": false,
                            "type": "NavigationGuard | undefined",
                            "schema": {
                              "kind": "enum",
                              "type": "NavigationGuard | undefined",
                              "schema": {
                                "0": "undefined",
                                "1": {
                                  "kind": "event",
                                  "type": "(to: RouteLocationNormalizedGeneric, from: RouteLocationNormalizedLoadedGeneric, next: NavigationGuardNext): _Awaitable<...>",
                                  "schema": []
                                }
                              }
                            }
                          },
                          "beforeRouteLeave": {
                            "name": "beforeRouteLeave",
                            "global": false,
                            "description": "Guard called when the router is navigating away from the current route that\nis rendering this component.",
                            "tags": [
                              {
                                "name": "param",
                                "text": "to - RouteLocationRaw we are navigating to"
                              },
                              {
                                "name": "param",
                                "text": "from - RouteLocationRaw we are navigating from"
                              },
                              {
                                "name": "param",
                                "text": "next - function to validate, cancel or modify (by redirecting) the\nnavigation"
                              }
                            ],
                            "required": false,
                            "type": "NavigationGuard | undefined",
                            "schema": "NavigationGuard | undefined"
                          },
                          "head": {
                            "name": "head",
                            "global": false,
                            "description": "Available exclusively for `defineNuxtComponent`.\nIt will not be executed when using `defineComponent`.",
                            "tags": [],
                            "required": false,
                            "type": "((nuxtApp: NuxtApp) => U<Deprecated>) | undefined",
                            "schema": {
                              "kind": "enum",
                              "type": "((nuxtApp: NuxtApp) => U<Deprecated>) | undefined",
                              "schema": {
                                "0": "undefined",
                                "1": {
                                  "kind": "event",
                                  "type": "(nuxtApp: NuxtApp): UseHeadInput<Deprecated>",
                                  "schema": []
                                }
                              }
                            }
                          }
                        }
                      },
                      "20": {
                        "kind": "event",
                        "type": "(props: any, ctx: Omit<{ attrs: Data; slots: Readonly<InternalSlots>; emit: (event: string, ...args: any[]) => void; expose: <Exposed extends Record<string, any> = Record<string, any>>(exposed?: Exposed | undefined) => void; }, 'expose'>): any",
                        "schema": []
                      },
                      "21": {
                        "kind": "object",
                        "type": "ComponentPublicInstanceConstructor<any, any, any, any, ComputedOptions, MethodOptions>",
                        "schema": {}
                      }
                    }
                  }
                },
                "class": {
                  "name": "class",
                  "global": false,
                  "description": "",
                  "tags": [],
                  "required": false,
                  "type": "any",
                  "schema": "any"
                },
                "replace": {
                  "name": "replace",
                  "global": false,
                  "description": "Calls `router.replace` instead of `router.push`.",
                  "tags": [],
                  "required": false,
                  "type": "boolean | undefined",
                  "schema": "boolean | undefined"
                },
                "raw": {
                  "name": "raw",
                  "global": false,
                  "description": "When `true`, only styles from `class`, `activeClass`, and `inactiveClass` will be applied.",
                  "tags": [],
                  "required": false,
                  "type": "boolean | undefined",
                  "schema": "boolean | undefined"
                },
                "to": {
                  "name": "to",
                  "global": false,
                  "description": "Route Location the link should navigate to when clicked on.",
                  "tags": [],
                  "required": false,
                  "type": "string | RouteLocationAsRelativeGeneric | RouteLocationAsPathGeneric | undefined",
                  "schema": {
                    "kind": "enum",
                    "type": "string | RouteLocationAsRelativeGeneric | RouteLocationAsPathGeneric | undefined",
                    "schema": {
                      "0": "undefined",
                      "1": "string",
                      "2": {
                        "kind": "object",
                        "type": "RouteLocationAsRelativeGeneric",
                        "schema": {
                          "name": {
                            "name": "name",
                            "global": false,
                            "description": "",
                            "tags": [],
                            "required": false,
                            "type": "RouteRecordNameGeneric",
                            "schema": {
                              "kind": "enum",
                              "type": "RouteRecordNameGeneric",
                              "schema": {
                                "0": "undefined",
                                "1": "string",
                                "2": "symbol"
                              }
                            }
                          },
                          "params": {
                            "name": "params",
                            "global": false,
                            "description": "",
                            "tags": [],
                            "required": false,
                            "type": "RouteParamsRawGeneric | undefined",
                            "schema": {
                              "kind": "enum",
                              "type": "RouteParamsRawGeneric | undefined",
                              "schema": {
                                "0": "undefined",
                                "1": "RouteParamsRawGeneric"
                              }
                            }
                          },
                          "path": {
                            "name": "path",
                            "global": false,
                            "description": "A relative path to the current location. This property should be removed",
                            "tags": [],
                            "required": false,
                            "type": "undefined",
                            "schema": "undefined"
                          },
                          "query": {
                            "name": "query",
                            "global": false,
                            "description": "",
                            "tags": [],
                            "required": false,
                            "type": "LocationQueryRaw | undefined",
                            "schema": {
                              "kind": "enum",
                              "type": "LocationQueryRaw | undefined",
                              "schema": {
                                "0": "undefined",
                                "1": "LocationQueryRaw"
                              }
                            }
                          },
                          "hash": {
                            "name": "hash",
                            "global": false,
                            "description": "",
                            "tags": [],
                            "required": false,
                            "type": "string | undefined",
                            "schema": "string | undefined"
                          },
                          "replace": {
                            "name": "replace",
                            "global": false,
                            "description": "Replace the entry in the history instead of pushing a new entry",
                            "tags": [],
                            "required": false,
                            "type": "boolean | undefined",
                            "schema": "boolean | undefined"
                          },
                          "force": {
                            "name": "force",
                            "global": false,
                            "description": "Triggers the navigation even if the location is the same as the current one.\r\nNote this will also add a new entry to the history unless `replace: true`\r\nis passed.",
                            "tags": [],
                            "required": false,
                            "type": "boolean | undefined",
                            "schema": "boolean | undefined"
                          },
                          "state": {
                            "name": "state",
                            "global": false,
                            "description": "State to save using the History API. This cannot contain any reactive\r\nvalues and some primitives like Symbols are forbidden. More info at\r\nhttps://developer.mozilla.org/en-US/docs/Web/API/History/state",
                            "tags": [],
                            "required": false,
                            "type": "HistoryState | undefined",
                            "schema": {
                              "kind": "enum",
                              "type": "HistoryState | undefined",
                              "schema": {
                                "0": "undefined",
                                "1": {
                                  "kind": "object",
                                  "type": "HistoryState",
                                  "schema": {}
                                }
                              }
                            }
                          }
                        }
                      },
                      "3": {
                        "kind": "object",
                        "type": "RouteLocationAsPathGeneric",
                        "schema": {
                          "path": {
                            "name": "path",
                            "global": false,
                            "description": "Percentage encoded pathname section of the URL.",
                            "tags": [],
                            "required": true,
                            "type": "string",
                            "schema": "string"
                          },
                          "query": {
                            "name": "query",
                            "global": false,
                            "description": "",
                            "tags": [],
                            "required": false,
                            "type": "LocationQueryRaw | undefined",
                            "schema": "LocationQueryRaw | undefined"
                          },
                          "hash": {
                            "name": "hash",
                            "global": false,
                            "description": "",
                            "tags": [],
                            "required": false,
                            "type": "string | undefined",
                            "schema": "string | undefined"
                          },
                          "replace": {
                            "name": "replace",
                            "global": false,
                            "description": "Replace the entry in the history instead of pushing a new entry",
                            "tags": [],
                            "required": false,
                            "type": "boolean | undefined",
                            "schema": "boolean | undefined"
                          },
                          "force": {
                            "name": "force",
                            "global": false,
                            "description": "Triggers the navigation even if the location is the same as the current one.\r\nNote this will also add a new entry to the history unless `replace: true`\r\nis passed.",
                            "tags": [],
                            "required": false,
                            "type": "boolean | undefined",
                            "schema": "boolean | undefined"
                          },
                          "state": {
                            "name": "state",
                            "global": false,
                            "description": "State to save using the History API. This cannot contain any reactive\r\nvalues and some primitives like Symbols are forbidden. More info at\r\nhttps://developer.mozilla.org/en-US/docs/Web/API/History/state",
                            "tags": [],
                            "required": false,
                            "type": "HistoryState | undefined",
                            "schema": "HistoryState | undefined"
                          }
                        }
                      }
                    }
                  }
                },
                "activeClass": {
                  "name": "activeClass",
                  "global": false,
                  "description": "Class to apply when the link is active",
                  "tags": [],
                  "required": false,
                  "type": "string | undefined",
                  "schema": "string | undefined"
                },
                "exactActiveClass": {
                  "name": "exactActiveClass",
                  "global": false,
                  "description": "Class to apply when the link is exact active",
                  "tags": [],
                  "required": false,
                  "type": "string | undefined",
                  "schema": "string | undefined"
                },
                "ariaCurrentValue": {
                  "name": "ariaCurrentValue",
                  "global": false,
                  "description": "Value passed to the attribute `aria-current` when the link is exact active.",
                  "tags": [
                    {
                      "name": "defaultValue",
                      "text": "`'page'`"
                    }
                  ],
                  "required": false,
                  "type": "'page' | 'step' | 'location' | 'date' | 'time' | 'true' | 'false' | undefined",
                  "schema": {
                    "kind": "enum",
                    "type": "'page' | 'step' | 'location' | 'date' | 'time' | 'true' | 'false' | undefined",
                    "schema": {
                      "0": "undefined",
                      "1": "'page'",
                      "2": "'step'",
                      "3": "'location'",
                      "4": "'date'",
                      "5": "'time'",
                      "6": "'true'",
                      "7": "'false'"
                    }
                  }
                },
                "viewTransition": {
                  "name": "viewTransition",
                  "global": false,
                  "description": "Pass the returned promise of `router.push()` to `document.startViewTransition()` if supported.",
                  "tags": [],
                  "required": false,
                  "type": "boolean | undefined",
                  "schema": "boolean | undefined"
                },
                "active": {
                  "name": "active",
                  "global": false,
                  "description": "Force the link to be active independent of the current route.",
                  "tags": [],
                  "required": false,
                  "type": "boolean | undefined",
                  "schema": "boolean | undefined"
                },
                "exact": {
                  "name": "exact",
                  "global": false,
                  "description": "Will only be active if the current route is an exact match.",
                  "tags": [],
                  "required": false,
                  "type": "boolean | undefined",
                  "schema": "boolean | undefined"
                },
                "exactQuery": {
                  "name": "exactQuery",
                  "global": false,
                  "description": "Allows controlling how the current route query sets the link as active.",
                  "tags": [],
                  "required": false,
                  "type": "boolean | 'partial' | undefined",
                  "schema": {
                    "kind": "enum",
                    "type": "boolean | 'partial' | undefined",
                    "schema": {
                      "0": "undefined",
                      "1": "false",
                      "2": "true",
                      "3": "'partial'"
                    }
                  }
                },
                "exactHash": {
                  "name": "exactHash",
                  "global": false,
                  "description": "Will only be active if the current route hash is an exact match.",
                  "tags": [],
                  "required": false,
                  "type": "boolean | undefined",
                  "schema": "boolean | undefined"
                },
                "inactiveClass": {
                  "name": "inactiveClass",
                  "global": false,
                  "description": "The class to apply when the link is inactive.",
                  "tags": [],
                  "required": false,
                  "type": "string | undefined",
                  "schema": "string | undefined"
                },
                "href": {
                  "name": "href",
                  "global": false,
                  "description": "An alias for `to`. If used with `to`, `href` will be ignored",
                  "tags": [],
                  "required": false,
                  "type": "string | RouteLocationAsRelativeGeneric | RouteLocationAsPathGeneric | undefined",
                  "schema": "string | RouteLocationAsRelativeGeneric | RouteLocationAsPathGeneric | undefined"
                },
                "external": {
                  "name": "external",
                  "global": false,
                  "description": "Forces the link to be considered as external (true) or internal (false). This is helpful to handle edge-cases",
                  "tags": [],
                  "required": false,
                  "type": "boolean | undefined",
                  "schema": "boolean | undefined"
                },
                "target": {
                  "name": "target",
                  "global": false,
                  "description": "Where to display the linked URL, as the name for a browsing context.",
                  "tags": [],
                  "required": false,
                  "type": "(string & {}) | '_blank' | '_parent' | '_self' | '_top' | null | undefined",
                  "schema": {
                    "kind": "enum",
                    "type": "(string & {}) | '_blank' | '_parent' | '_self' | '_top' | null | undefined",
                    "schema": {
                      "0": "undefined",
                      "1": "null",
                      "2": "string & {}",
                      "3": "'_blank'",
                      "4": "'_parent'",
                      "5": "'_self'",
                      "6": "'_top'"
                    }
                  }
                },
                "rel": {
                  "name": "rel",
                  "global": false,
                  "description": "A rel attribute value to apply on the link. Defaults to 'noopener noreferrer' for external links.",
                  "tags": [],
                  "required": false,
                  "type": "(string & {}) | 'noopener' | 'noreferrer' | 'nofollow' | 'sponsored' | 'ugc' | null | undefined",
                  "schema": {
                    "kind": "enum",
                    "type": "(string & {}) | 'noopener' | 'noreferrer' | 'nofollow' | 'sponsored' | 'ugc' | null | undefined",
                    "schema": {
                      "0": "undefined",
                      "1": "null",
                      "2": "string & {}",
                      "3": "'noopener'",
                      "4": "'noreferrer'",
                      "5": "'nofollow'",
                      "6": "'sponsored'",
                      "7": "'ugc'"
                    }
                  }
                },
                "noRel": {
                  "name": "noRel",
                  "global": false,
                  "description": "If set to true, no rel attribute will be added to the link",
                  "tags": [],
                  "required": false,
                  "type": "boolean | undefined",
                  "schema": "boolean | undefined"
                },
                "prefetchedClass": {
                  "name": "prefetchedClass",
                  "global": false,
                  "description": "A class to apply to links that have been prefetched.",
                  "tags": [],
                  "required": false,
                  "type": "string | undefined",
                  "schema": "string | undefined"
                },
                "prefetch": {
                  "name": "prefetch",
                  "global": false,
                  "description": "When enabled will prefetch middleware, layouts and payloads of links in the viewport.",
                  "tags": [],
                  "required": false,
                  "type": "boolean | undefined",
                  "schema": "boolean | undefined"
                },
                "prefetchOn": {
                  "name": "prefetchOn",
                  "global": false,
                  "description": "Allows controlling when to prefetch links. By default, prefetch is triggered only on visibility.",
                  "tags": [],
                  "required": false,
                  "type": "'visibility' | 'interaction' | Partial<{ visibility: boolean; interaction: boolean; }> | undefined",
                  "schema": {
                    "kind": "enum",
                    "type": "'visibility' | 'interaction' | Partial<{ visibility: boolean; interaction: boolean; }> | undefined",
                    "schema": {
                      "0": "undefined",
                      "1": "'visibility'",
                      "2": "'interaction'",
                      "3": "Partial<{ visibility: boolean; interaction: boolean; }>"
                    }
                  }
                },
                "noPrefetch": {
                  "name": "noPrefetch",
                  "global": false,
                  "description": "Escape hatch to disable `prefetch` attribute.",
                  "tags": [],
                  "required": false,
                  "type": "boolean | undefined",
                  "schema": "boolean | undefined"
                }
              }
            }
          ]
        }
      }
    }
  },
  {
    "name": "loading",
    "global": false,
    "description": "When `true`, the loading icon will be displayed.",
    "tags": [],
    "required": false,
    "type": "boolean | undefined",
    "schema": {
      "kind": "enum",
      "type": "boolean | undefined",
      "schema": {
        "0": "undefined",
        "1": "false",
        "2": "true"
      }
    }
  },
  {
    "name": "loadingIcon",
    "global": false,
    "description": "The icon when the `loading` prop is `true`.",
    "tags": [
      {
        "name": "defaultValue",
        "text": "appConfig.pohon.icons.loading"
      },
      {
        "name": "IconifyIcon"
      }
    ],
    "required": false,
    "type": "string | object | undefined",
    "schema": {
      "kind": "enum",
      "type": "string | object | undefined",
      "schema": {
        "0": "undefined",
        "1": "string",
        "2": "object"
      }
    }
  },
  {
    "name": "modal",
    "global": false,
    "description": "The modality of the dialog When set to `true`, <br>\ninteraction with outside elements will be disabled and only dialog content will be visible to screen readers.",
    "tags": [],
    "required": false,
    "type": "boolean | undefined",
    "schema": {
      "kind": "enum",
      "type": "boolean | undefined",
      "schema": {
        "0": "undefined",
        "1": "false",
        "2": "true"
      }
    }
  },
  {
    "name": "navigation",
    "global": false,
    "description": "",
    "tags": [],
    "required": false,
    "type": "ContentNavigationItem[] | undefined",
    "schema": {
      "kind": "enum",
      "type": "ContentNavigationItem[] | undefined",
      "schema": {
        "0": "undefined",
        "1": {
          "kind": "array",
          "type": "ContentNavigationItem[]",
          "schema": [
            {
              "kind": "object",
              "type": "ContentNavigationItem",
              "schema": {
                "title": {
                  "name": "title",
                  "global": false,
                  "description": "",
                  "tags": [],
                  "required": true,
                  "type": "string",
                  "schema": "string"
                },
                "path": {
                  "name": "path",
                  "global": false,
                  "description": "",
                  "tags": [],
                  "required": true,
                  "type": "string",
                  "schema": "string"
                },
                "stem": {
                  "name": "stem",
                  "global": false,
                  "description": "",
                  "tags": [],
                  "required": false,
                  "type": "string | undefined",
                  "schema": {
                    "kind": "enum",
                    "type": "string | undefined",
                    "schema": {
                      "0": "undefined",
                      "1": "string"
                    }
                  }
                },
                "children": {
                  "name": "children",
                  "global": false,
                  "description": "",
                  "tags": [],
                  "required": false,
                  "type": "ContentNavigationItem[] | undefined",
                  "schema": "ContentNavigationItem[] | undefined"
                },
                "page": {
                  "name": "page",
                  "global": false,
                  "description": "",
                  "tags": [],
                  "required": false,
                  "type": "false | undefined",
                  "schema": {
                    "kind": "enum",
                    "type": "false | undefined",
                    "schema": {
                      "0": "undefined",
                      "1": "false"
                    }
                  }
                }
              }
            }
          ]
        }
      }
    }
  },
  {
    "name": "overlay",
    "global": false,
    "description": "Render an overlay behind the dialog.",
    "tags": [
      {
        "name": "defaultValue",
        "text": "true"
      }
    ],
    "required": false,
    "type": "boolean | undefined",
    "schema": {
      "kind": "enum",
      "type": "boolean | undefined",
      "schema": {
        "0": "undefined",
        "1": "false",
        "2": "true"
      }
    }
  },
  {
    "name": "placeholder",
    "global": false,
    "description": "The placeholder text for the input.",
    "tags": [
      {
        "name": "defaultValue",
        "text": "t('commandPalette.placeholder')"
      }
    ],
    "required": false,
    "type": "string | undefined",
    "schema": {
      "kind": "enum",
      "type": "string | undefined",
      "schema": {
        "0": "undefined",
        "1": "string"
      }
    }
  },
  {
    "name": "portal",
    "global": false,
    "description": "Render the dialog in a portal.",
    "tags": [
      {
        "name": "defaultValue",
        "text": "true"
      }
    ],
    "required": false,
    "type": "string | boolean | HTMLElement | undefined",
    "schema": {
      "kind": "enum",
      "type": "string | boolean | HTMLElement | undefined",
      "schema": {
        "0": "undefined",
        "1": "string",
        "2": "false",
        "3": "true",
        "4": {
          "kind": "object",
          "type": "HTMLElement",
          "schema": {}
        }
      }
    }
  },
  {
    "name": "searchTerm",
    "global": false,
    "description": "",
    "tags": [],
    "required": false,
    "type": "string | undefined",
    "schema": {
      "kind": "enum",
      "type": "string | undefined",
      "schema": {
        "0": "undefined",
        "1": "string"
      }
    },
    "default": "''"
  },
  {
    "name": "shortcut",
    "global": false,
    "description": "Keyboard shortcut to open the search (used by [`defineShortcuts`](https://akara.vinicunca.dev/pohon/composables/define-shortcuts))",
    "tags": [
      {
        "name": "defaultValue",
        "text": "'meta_k'"
      }
    ],
    "required": false,
    "type": "string | undefined",
    "schema": {
      "kind": "enum",
      "type": "string | undefined",
      "schema": {
        "0": "undefined",
        "1": "string"
      }
    },
    "default": "'meta_k'"
  },
  {
    "name": "title",
    "global": false,
    "description": "",
    "tags": [],
    "required": false,
    "type": "string | undefined",
    "schema": {
      "kind": "enum",
      "type": "string | undefined",
      "schema": {
        "0": "undefined",
        "1": "string"
      }
    }
  },
  {
    "name": "transition",
    "global": false,
    "description": "Animate the dialog when opening or closing.",
    "tags": [
      {
        "name": "defaultValue",
        "text": "true"
      }
    ],
    "required": false,
    "type": "boolean | undefined",
    "schema": {
      "kind": "enum",
      "type": "boolean | undefined",
      "schema": {
        "0": "undefined",
        "1": "false",
        "2": "true"
      }
    }
  },
  {
    "name": "pohon",
    "global": false,
    "description": "",
    "tags": [],
    "required": false,
    "type": "({ dialog?: ClassValue; input?: ClassValue; } & { root?: ClassValue; input?: ClassValue; close?: ClassValue; back?: ClassValue; content?: ClassValue; footer?: ClassValue; viewport?: ClassValue; group?: ClassValue; empty?: ClassValue; label?: ClassValue; item?: ClassValue; itemLeadingIcon?: ClassValue; itemLeadingAvatar?: ClassValue; itemLeadingAvatarSize?: ClassValue; itemLeadingChip?: ClassValue; itemLeadingChipSize?: ClassValue; itemTrailing?: ClassValue; itemTrailingIcon?: ClassValue; itemTrailingHighlightedIcon?: ClassValue; itemTrailingKbds?: ClassValue; itemTrailingKbdsSize?: ClassValue; itemLabel?: ClassValue; itemLabelBase?: ClassValue; itemLabelPrefix?: ClassValue; itemLabelSuffix?: ClassValue; }) | undefined",
    "schema": {
      "kind": "enum",
      "type": "({ dialog?: ClassValue; input?: ClassValue; } & { root?: ClassValue; input?: ClassValue; close?: ClassValue; back?: ClassValue; content?: ClassValue; footer?: ClassValue; viewport?: ClassValue; group?: ClassValue; empty?: ClassValue; label?: ClassValue; item?: ClassValue; itemLeadingIcon?: ClassValue; itemLeadingAvatar?: ClassValue; itemLeadingAvatarSize?: ClassValue; itemLeadingChip?: ClassValue; itemLeadingChipSize?: ClassValue; itemTrailing?: ClassValue; itemTrailingIcon?: ClassValue; itemTrailingHighlightedIcon?: ClassValue; itemTrailingKbds?: ClassValue; itemTrailingKbdsSize?: ClassValue; itemLabel?: ClassValue; itemLabelBase?: ClassValue; itemLabelPrefix?: ClassValue; itemLabelSuffix?: ClassValue; }) | undefined",
      "schema": {
        "0": "undefined",
        "1": {
          "kind": "object",
          "type": "{ dialog?: ClassValue; input?: ClassValue; } & { root?: ClassValue; input?: ClassValue; close?: ClassValue; back?: ClassValue; content?: ClassValue; footer?: ClassValue; viewport?: ClassValue; group?: ClassValue; empty?: ClassValue; label?: ClassValue; item?: ClassValue; itemLeadingIcon?: ClassValue; itemLeadingAvatar?: ClassValue; itemLeadingAvatarSize?: ClassValue; itemLeadingChip?: ClassValue; itemLeadingChipSize?: ClassValue; itemTrailing?: ClassValue; itemTrailingIcon?: ClassValue; itemTrailingHighlightedIcon?: ClassValue; itemTrailingKbds?: ClassValue; itemTrailingKbdsSize?: ClassValue; itemLabel?: ClassValue; itemLabelBase?: ClassValue; itemLabelPrefix?: ClassValue; itemLabelSuffix?: ClassValue; }",
          "schema": {
            "dialog": {
              "name": "dialog",
              "global": false,
              "description": "",
              "tags": [],
              "required": false,
              "type": "ClassValue",
              "schema": {
                "kind": "enum",
                "type": "ClassValue",
                "schema": {
                  "0": "undefined",
                  "1": "null",
                  "2": "string",
                  "3": "false",
                  "4": "0",
                  "5": "0n",
                  "6": {
                    "kind": "array",
                    "type": "ClassNameArray",
                    "schema": [
                      "ClassValue"
                    ]
                  }
                }
              }
            },
            "input": {
              "name": "input",
              "global": false,
              "description": "",
              "tags": [],
              "required": false,
              "type": "ClassValue",
              "schema": "ClassValue"
            },
            "root": {
              "name": "root",
              "global": false,
              "description": "",
              "tags": [],
              "required": false,
              "type": "ClassValue",
              "schema": "ClassValue"
            },
            "close": {
              "name": "close",
              "global": false,
              "description": "",
              "tags": [],
              "required": false,
              "type": "ClassValue",
              "schema": "ClassValue"
            },
            "back": {
              "name": "back",
              "global": false,
              "description": "",
              "tags": [],
              "required": false,
              "type": "ClassValue",
              "schema": "ClassValue"
            },
            "content": {
              "name": "content",
              "global": false,
              "description": "",
              "tags": [],
              "required": false,
              "type": "ClassValue",
              "schema": "ClassValue"
            },
            "footer": {
              "name": "footer",
              "global": false,
              "description": "",
              "tags": [],
              "required": false,
              "type": "ClassValue",
              "schema": "ClassValue"
            },
            "viewport": {
              "name": "viewport",
              "global": false,
              "description": "",
              "tags": [],
              "required": false,
              "type": "ClassValue",
              "schema": "ClassValue"
            },
            "group": {
              "name": "group",
              "global": false,
              "description": "",
              "tags": [],
              "required": false,
              "type": "ClassValue",
              "schema": "ClassValue"
            },
            "empty": {
              "name": "empty",
              "global": false,
              "description": "",
              "tags": [],
              "required": false,
              "type": "ClassValue",
              "schema": "ClassValue"
            },
            "label": {
              "name": "label",
              "global": false,
              "description": "",
              "tags": [],
              "required": false,
              "type": "ClassValue",
              "schema": "ClassValue"
            },
            "item": {
              "name": "item",
              "global": false,
              "description": "",
              "tags": [],
              "required": false,
              "type": "ClassValue",
              "schema": "ClassValue"
            },
            "itemLeadingIcon": {
              "name": "itemLeadingIcon",
              "global": false,
              "description": "",
              "tags": [],
              "required": false,
              "type": "ClassValue",
              "schema": "ClassValue"
            },
            "itemLeadingAvatar": {
              "name": "itemLeadingAvatar",
              "global": false,
              "description": "",
              "tags": [],
              "required": false,
              "type": "ClassValue",
              "schema": "ClassValue"
            },
            "itemLeadingAvatarSize": {
              "name": "itemLeadingAvatarSize",
              "global": false,
              "description": "",
              "tags": [],
              "required": false,
              "type": "ClassValue",
              "schema": "ClassValue"
            },
            "itemLeadingChip": {
              "name": "itemLeadingChip",
              "global": false,
              "description": "",
              "tags": [],
              "required": false,
              "type": "ClassValue",
              "schema": "ClassValue"
            },
            "itemLeadingChipSize": {
              "name": "itemLeadingChipSize",
              "global": false,
              "description": "",
              "tags": [],
              "required": false,
              "type": "ClassValue",
              "schema": "ClassValue"
            },
            "itemTrailing": {
              "name": "itemTrailing",
              "global": false,
              "description": "",
              "tags": [],
              "required": false,
              "type": "ClassValue",
              "schema": "ClassValue"
            },
            "itemTrailingIcon": {
              "name": "itemTrailingIcon",
              "global": false,
              "description": "",
              "tags": [],
              "required": false,
              "type": "ClassValue",
              "schema": "ClassValue"
            },
            "itemTrailingHighlightedIcon": {
              "name": "itemTrailingHighlightedIcon",
              "global": false,
              "description": "",
              "tags": [],
              "required": false,
              "type": "ClassValue",
              "schema": "ClassValue"
            },
            "itemTrailingKbds": {
              "name": "itemTrailingKbds",
              "global": false,
              "description": "",
              "tags": [],
              "required": false,
              "type": "ClassValue",
              "schema": "ClassValue"
            },
            "itemTrailingKbdsSize": {
              "name": "itemTrailingKbdsSize",
              "global": false,
              "description": "",
              "tags": [],
              "required": false,
              "type": "ClassValue",
              "schema": "ClassValue"
            },
            "itemLabel": {
              "name": "itemLabel",
              "global": false,
              "description": "",
              "tags": [],
              "required": false,
              "type": "ClassValue",
              "schema": "ClassValue"
            },
            "itemLabelBase": {
              "name": "itemLabelBase",
              "global": false,
              "description": "",
              "tags": [],
              "required": false,
              "type": "ClassValue",
              "schema": "ClassValue"
            },
            "itemLabelPrefix": {
              "name": "itemLabelPrefix",
              "global": false,
              "description": "",
              "tags": [],
              "required": false,
              "type": "ClassValue",
              "schema": "ClassValue"
            },
            "itemLabelSuffix": {
              "name": "itemLabelSuffix",
              "global": false,
              "description": "",
              "tags": [],
              "required": false,
              "type": "ClassValue",
              "schema": "ClassValue"
            }
          }
        }
      }
    }
  }
],
  "emits": [
  {
    "name": "update:searchTerm",
    "description": "",
    "type": "[value: string]"
  }
],
  "slots": [
  {
    "name": "searchTerm",
    "description": "",
    "type": "string | undefined"
  }
]
}
