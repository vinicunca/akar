{
  "props": [
  {
    "name": "color",
    "global": false,
    "description": "",
    "tags": [
      {
        "name": "defaultValue",
        "text": "'primary'"
      }
    ],
    "required": false,
    "type": "'error' | 'primary' | 'secondary' | 'success' | 'info' | 'warning' | 'neutral' | undefined",
    "schema": {
      "kind": "enum",
      "type": "'error' | 'primary' | 'secondary' | 'success' | 'info' | 'warning' | 'neutral' | undefined",
      "schema": {
        "0": "undefined",
        "1": "'error'",
        "2": "'primary'",
        "3": "'secondary'",
        "4": "'success'",
        "5": "'info'",
        "6": "'warning'",
        "7": "'neutral'"
      }
    }
  },
  {
    "name": "description",
    "global": false,
    "description": "",
    "tags": [],
    "required": false,
    "type": "string | undefined",
    "schema": {
      "kind": "enum",
      "type": "string | undefined",
      "schema": {
        "0": "undefined",
        "1": "string"
      }
    }
  },
  {
    "name": "icon",
    "global": false,
    "description": "",
    "tags": [],
    "required": false,
    "type": "string | object | undefined",
    "schema": {
      "kind": "enum",
      "type": "string | object | undefined",
      "schema": {
        "0": "undefined",
        "1": "string",
        "2": "object"
      }
    }
  },
  {
    "name": "target",
    "global": false,
    "description": "",
    "tags": [],
    "required": false,
    "type": "(string & {}) | '_blank' | '_parent' | '_self' | '_top' | null | undefined",
    "schema": {
      "kind": "enum",
      "type": "(string & {}) | '_blank' | '_parent' | '_self' | '_top' | null | undefined",
      "schema": {
        "0": "undefined",
        "1": "null",
        "2": {
          "kind": "object",
          "type": "string & {}",
          "schema": {}
        },
        "3": "'_blank'",
        "4": "'_parent'",
        "5": "'_self'",
        "6": "'_top'"
      }
    }
  },
  {
    "name": "title",
    "global": false,
    "description": "",
    "tags": [],
    "required": false,
    "type": "string | undefined",
    "schema": {
      "kind": "enum",
      "type": "string | undefined",
      "schema": {
        "0": "undefined",
        "1": "string"
      }
    }
  },
  {
    "name": "to",
    "global": false,
    "description": "",
    "tags": [],
    "required": false,
    "type": "string | RouteLocationAsRelativeGeneric | RouteLocationAsPathGeneric | undefined",
    "schema": {
      "kind": "enum",
      "type": "string | RouteLocationAsRelativeGeneric | RouteLocationAsPathGeneric | undefined",
      "schema": {
        "0": "undefined",
        "1": "string",
        "2": {
          "kind": "object",
          "type": "RouteLocationAsRelativeGeneric",
          "schema": {
            "name": {
              "name": "name",
              "global": false,
              "description": "",
              "tags": [],
              "required": false,
              "type": "RouteRecordNameGeneric",
              "schema": {
                "kind": "enum",
                "type": "RouteRecordNameGeneric",
                "schema": {
                  "0": "undefined",
                  "1": "string",
                  "2": "symbol"
                }
              }
            },
            "params": {
              "name": "params",
              "global": false,
              "description": "",
              "tags": [],
              "required": false,
              "type": "RouteParamsRawGeneric | undefined",
              "schema": {
                "kind": "enum",
                "type": "RouteParamsRawGeneric | undefined",
                "schema": {
                  "0": "undefined",
                  "1": "RouteParamsRawGeneric"
                }
              }
            },
            "path": {
              "name": "path",
              "global": false,
              "description": "A relative path to the current location. This property should be removed",
              "tags": [],
              "required": false,
              "type": "undefined",
              "schema": "undefined"
            },
            "query": {
              "name": "query",
              "global": false,
              "description": "",
              "tags": [],
              "required": false,
              "type": "LocationQueryRaw | undefined",
              "schema": {
                "kind": "enum",
                "type": "LocationQueryRaw | undefined",
                "schema": {
                  "0": "undefined",
                  "1": "LocationQueryRaw"
                }
              }
            },
            "hash": {
              "name": "hash",
              "global": false,
              "description": "",
              "tags": [],
              "required": false,
              "type": "string | undefined",
              "schema": {
                "kind": "enum",
                "type": "string | undefined",
                "schema": {
                  "0": "undefined",
                  "1": "string"
                }
              }
            },
            "replace": {
              "name": "replace",
              "global": false,
              "description": "Replace the entry in the history instead of pushing a new entry",
              "tags": [],
              "required": false,
              "type": "boolean | undefined",
              "schema": {
                "kind": "enum",
                "type": "boolean | undefined",
                "schema": {
                  "0": "undefined",
                  "1": "false",
                  "2": "true"
                }
              }
            },
            "force": {
              "name": "force",
              "global": false,
              "description": "Triggers the navigation even if the location is the same as the current one.\r\nNote this will also add a new entry to the history unless `replace: true`\r\nis passed.",
              "tags": [],
              "required": false,
              "type": "boolean | undefined",
              "schema": "boolean | undefined"
            },
            "state": {
              "name": "state",
              "global": false,
              "description": "State to save using the History API. This cannot contain any reactive\r\nvalues and some primitives like Symbols are forbidden. More info at\r\nhttps://developer.mozilla.org/en-US/docs/Web/API/History/state",
              "tags": [],
              "required": false,
              "type": "HistoryState | undefined",
              "schema": {
                "kind": "enum",
                "type": "HistoryState | undefined",
                "schema": {
                  "0": "undefined",
                  "1": {
                    "kind": "object",
                    "type": "HistoryState",
                    "schema": {}
                  }
                }
              }
            }
          }
        },
        "3": {
          "kind": "object",
          "type": "RouteLocationAsPathGeneric",
          "schema": {
            "path": {
              "name": "path",
              "global": false,
              "description": "Percentage encoded pathname section of the URL.",
              "tags": [],
              "required": true,
              "type": "string",
              "schema": "string"
            },
            "query": {
              "name": "query",
              "global": false,
              "description": "",
              "tags": [],
              "required": false,
              "type": "LocationQueryRaw | undefined",
              "schema": "LocationQueryRaw | undefined"
            },
            "hash": {
              "name": "hash",
              "global": false,
              "description": "",
              "tags": [],
              "required": false,
              "type": "string | undefined",
              "schema": "string | undefined"
            },
            "replace": {
              "name": "replace",
              "global": false,
              "description": "Replace the entry in the history instead of pushing a new entry",
              "tags": [],
              "required": false,
              "type": "boolean | undefined",
              "schema": "boolean | undefined"
            },
            "force": {
              "name": "force",
              "global": false,
              "description": "Triggers the navigation even if the location is the same as the current one.\r\nNote this will also add a new entry to the history unless `replace: true`\r\nis passed.",
              "tags": [],
              "required": false,
              "type": "boolean | undefined",
              "schema": "boolean | undefined"
            },
            "state": {
              "name": "state",
              "global": false,
              "description": "State to save using the History API. This cannot contain any reactive\r\nvalues and some primitives like Symbols are forbidden. More info at\r\nhttps://developer.mozilla.org/en-US/docs/Web/API/History/state",
              "tags": [],
              "required": false,
              "type": "HistoryState | undefined",
              "schema": "HistoryState | undefined"
            }
          }
        }
      }
    }
  },
  {
    "name": "pohon",
    "global": false,
    "description": "",
    "tags": [],
    "required": false,
    "type": "{ base?: ClassValue; icon?: ClassValue; title?: ClassValue; description?: ClassValue; externalIcon?: ClassValue; } | undefined",
    "schema": {
      "kind": "enum",
      "type": "{ base?: ClassValue; icon?: ClassValue; title?: ClassValue; description?: ClassValue; externalIcon?: ClassValue; } | undefined",
      "schema": {
        "0": "undefined",
        "1": "{ base?: ClassValue; icon?: ClassValue; title?: ClassValue; description?: ClassValue; externalIcon?: ClassValue; }"
      }
    }
  }
],
  "slots": [
  {
    "description": "",
    "type": ""
  },
  {
    "description": "",
    "type": ""
  }
]
}
