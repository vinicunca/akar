{
  "props": [
  {
    "name": "as",
    "global": false,
    "description": "The element or component this component should render as.\n\nRead our [primitive tag](https://akar.vinicunca.dev/core/guides/primitive-tag) guide for more details.",
    "tags": [
      {
        "name": "defaultValue",
        "text": "'div'"
      }
    ],
    "required": false,
    "type": "APrimitiveAsTag | Component | undefined",
    "schema": "any"
  },
  {
    "name": "checkedIcon",
    "global": false,
    "description": "Display an icon when the switch is checked.",
    "tags": [
      {
        "name": "IconifyIcon"
      }
    ],
    "required": false,
    "type": "string | object | undefined",
    "schema": {
      "kind": "enum",
      "type": "string | object | undefined",
      "schema": {
        "0": "undefined",
        "1": "string",
        "2": "object"
      }
    }
  },
  {
    "name": "color",
    "global": false,
    "description": "",
    "tags": [
      {
        "name": "defaultValue",
        "text": "'primary'"
      }
    ],
    "required": false,
    "type": "'error' | 'primary' | 'secondary' | 'success' | 'info' | 'warning' | 'neutral' | undefined",
    "schema": {
      "kind": "enum",
      "type": "'error' | 'primary' | 'secondary' | 'success' | 'info' | 'warning' | 'neutral' | undefined",
      "schema": {
        "0": "undefined",
        "1": "'error'",
        "2": "'primary'",
        "3": "'secondary'",
        "4": "'success'",
        "5": "'info'",
        "6": "'warning'",
        "7": "'neutral'"
      }
    }
  },
  {
    "name": "defaultValue",
    "global": false,
    "description": "The state of the switch when it is initially rendered. Use when you do not need to control its state.",
    "tags": [],
    "required": false,
    "type": "boolean | undefined",
    "schema": {
      "kind": "enum",
      "type": "boolean | undefined",
      "schema": {
        "0": "undefined",
        "1": "false",
        "2": "true"
      }
    }
  },
  {
    "name": "description",
    "global": false,
    "description": "",
    "tags": [],
    "required": false,
    "type": "string | undefined",
    "schema": {
      "kind": "enum",
      "type": "string | undefined",
      "schema": {
        "0": "undefined",
        "1": "string"
      }
    }
  },
  {
    "name": "disabled",
    "global": false,
    "description": "When `true`, prevents the user from interacting with the switch.",
    "tags": [],
    "required": false,
    "type": "boolean | undefined",
    "schema": {
      "kind": "enum",
      "type": "boolean | undefined",
      "schema": {
        "0": "undefined",
        "1": "false",
        "2": "true"
      }
    }
  },
  {
    "name": "id",
    "global": false,
    "description": "",
    "tags": [],
    "required": false,
    "type": "string | undefined",
    "schema": {
      "kind": "enum",
      "type": "string | undefined",
      "schema": {
        "0": "undefined",
        "1": "string"
      }
    }
  },
  {
    "name": "label",
    "global": false,
    "description": "",
    "tags": [],
    "required": false,
    "type": "string | undefined",
    "schema": {
      "kind": "enum",
      "type": "string | undefined",
      "schema": {
        "0": "undefined",
        "1": "string"
      }
    }
  },
  {
    "name": "loading",
    "global": false,
    "description": "When `true`, the loading icon will be displayed.",
    "tags": [],
    "required": false,
    "type": "boolean | undefined",
    "schema": {
      "kind": "enum",
      "type": "boolean | undefined",
      "schema": {
        "0": "undefined",
        "1": "false",
        "2": "true"
      }
    }
  },
  {
    "name": "loadingIcon",
    "global": false,
    "description": "The icon when the `loading` prop is `true`.",
    "tags": [
      {
        "name": "defaultValue",
        "text": "appConfig.pohon.icons.loading"
      },
      {
        "name": "IconifyIcon"
      }
    ],
    "required": false,
    "type": "string | object | undefined",
    "schema": {
      "kind": "enum",
      "type": "string | object | undefined",
      "schema": {
        "0": "undefined",
        "1": "string",
        "2": "object"
      }
    }
  },
  {
    "name": "modelValue",
    "global": false,
    "description": "",
    "tags": [],
    "required": false,
    "type": "boolean | undefined",
    "schema": {
      "kind": "enum",
      "type": "boolean | undefined",
      "schema": {
        "0": "undefined",
        "1": "false",
        "2": "true"
      }
    },
    "default": "undefined"
  },
  {
    "name": "name",
    "global": false,
    "description": "The name of the field. Submitted with its owning form as part of a name/value pair.",
    "tags": [],
    "required": false,
    "type": "string | undefined",
    "schema": {
      "kind": "enum",
      "type": "string | undefined",
      "schema": {
        "0": "undefined",
        "1": "string"
      }
    }
  },
  {
    "name": "required",
    "global": false,
    "description": "When `true`, indicates that the user must set the value before the owning form can be submitted.",
    "tags": [],
    "required": false,
    "type": "boolean | undefined",
    "schema": {
      "kind": "enum",
      "type": "boolean | undefined",
      "schema": {
        "0": "undefined",
        "1": "false",
        "2": "true"
      }
    }
  },
  {
    "name": "size",
    "global": false,
    "description": "",
    "tags": [
      {
        "name": "defaultValue",
        "text": "'md'"
      }
    ],
    "required": false,
    "type": "'md' | 'xs' | 'sm' | 'lg' | 'xl' | undefined",
    "schema": {
      "kind": "enum",
      "type": "'md' | 'xs' | 'sm' | 'lg' | 'xl' | undefined",
      "schema": {
        "0": "undefined",
        "1": "'md'",
        "2": "'xs'",
        "3": "'sm'",
        "4": "'lg'",
        "5": "'xl'"
      }
    }
  },
  {
    "name": "uncheckedIcon",
    "global": false,
    "description": "Display an icon when the switch is unchecked.",
    "tags": [
      {
        "name": "IconifyIcon"
      }
    ],
    "required": false,
    "type": "string | object | undefined",
    "schema": {
      "kind": "enum",
      "type": "string | object | undefined",
      "schema": {
        "0": "undefined",
        "1": "string",
        "2": "object"
      }
    }
  },
  {
    "name": "value",
    "global": false,
    "description": "The value given as data when submitted with a `name`.",
    "tags": [],
    "required": false,
    "type": "string | undefined",
    "schema": {
      "kind": "enum",
      "type": "string | undefined",
      "schema": {
        "0": "undefined",
        "1": "string"
      }
    }
  },
  {
    "name": "pohon",
    "global": false,
    "description": "",
    "tags": [],
    "required": false,
    "type": "{ root?: ClassValue; base?: ClassValue; container?: ClassValue; thumb?: ClassValue; icon?: ClassValue; wrapper?: ClassValue; label?: ClassValue; description?: ClassValue; } | undefined",
    "schema": {
      "kind": "enum",
      "type": "{ root?: ClassValue; base?: ClassValue; container?: ClassValue; thumb?: ClassValue; icon?: ClassValue; wrapper?: ClassValue; label?: ClassValue; description?: ClassValue; } | undefined",
      "schema": {
        "0": "undefined",
        "1": "{ root?: ClassValue; base?: ClassValue; container?: ClassValue; thumb?: ClassValue; icon?: ClassValue; wrapper?: ClassValue; label?: ClassValue; description?: ClassValue; }"
      }
    }
  }
],
  "slots": [
  {
    "name": "label",
    "type": "{ label?: string | undefined; }",
    "description": "",
    "schema": {
      "kind": "object",
      "type": "{ label?: string | undefined; }",
      "schema": {
        "label": {
          "name": "label",
          "global": false,
          "description": "",
          "tags": [],
          "required": false,
          "type": "string | undefined",
          "schema": {
            "kind": "enum",
            "type": "string | undefined",
            "schema": {
              "0": "undefined",
              "1": "string"
            }
          }
        }
      }
    }
  },
  {
    "name": "description",
    "type": "{ description?: string | undefined; }",
    "description": "",
    "schema": {
      "kind": "object",
      "type": "{ description?: string | undefined; }",
      "schema": {
        "description": {
          "name": "description",
          "global": false,
          "description": "",
          "tags": [],
          "required": false,
          "type": "string | undefined",
          "schema": {
            "kind": "enum",
            "type": "string | undefined",
            "schema": {
              "0": "undefined",
              "1": "string"
            }
          }
        }
      }
    }
  }
],
  "events": [
  {
    "name": "update:modelValue",
    "description": "",
    "tags": [],
    "type": "[value: boolean]",
    "signature": "(event: 'update:modelValue', value: boolean): void",
    "schema": [
      {
        "kind": "enum",
        "type": "boolean",
        "schema": [
          "false",
          "true"
        ]
      }
    ]
  },
  {
    "name": "change",
    "description": "",
    "tags": [],
    "type": "[event: Event]",
    "signature": "(event: 'change', event: Event): void",
    "schema": [
      {
        "kind": "object",
        "type": "Event",
        "schema": {}
      }
    ]
  }
],
  "exposed": [
  {
    "name": "$slots",
    "type": "Readonly<InternalSlots> & PSwitchSlots",
    "description": "",
    "schema": {
      "kind": "object",
      "type": "Readonly<InternalSlots> & PSwitchSlots",
      "schema": {
        "label": {
          "name": "label",
          "global": false,
          "description": "",
          "tags": [],
          "required": true,
          "type": "(props: { label?: string | undefined; }) => any",
          "schema": {
            "kind": "event",
            "type": "(props: { label?: string | undefined; }): any",
            "schema": {}
          }
        },
        "description": {
          "name": "description",
          "global": false,
          "description": "",
          "tags": [],
          "required": true,
          "type": "(props: { description?: string | undefined; }) => any",
          "schema": {
            "kind": "event",
            "type": "(props: { description?: string | undefined; }): any",
            "schema": {}
          }
        }
      }
    }
  },
  {
    "name": "defaultValue",
    "type": "boolean | undefined",
    "description": "The state of the switch when it is initially rendered. Use when you do not need to control its state.",
    "schema": {
      "kind": "enum",
      "type": "boolean | undefined",
      "schema": {
        "0": "undefined",
        "1": "false",
        "2": "true"
      }
    }
  },
  {
    "name": "modelValue",
    "type": "boolean | undefined",
    "description": "",
    "schema": {
      "kind": "enum",
      "type": "boolean | undefined",
      "schema": {
        "0": "undefined",
        "1": "false",
        "2": "true"
      }
    }
  },
  {
    "name": "disabled",
    "type": "boolean | undefined",
    "description": "When `true`, prevents the user from interacting with the switch.",
    "schema": {
      "kind": "enum",
      "type": "boolean | undefined",
      "schema": {
        "0": "undefined",
        "1": "false",
        "2": "true"
      }
    }
  },
  {
    "name": "onUpdate:modelValue",
    "type": "((value: boolean) => any) | undefined",
    "description": "",
    "schema": {
      "kind": "enum",
      "type": "((value: boolean) => any) | undefined",
      "schema": {
        "0": "undefined",
        "1": {
          "kind": "event",
          "type": "(value: boolean): any",
          "schema": [
            {
              "kind": "enum",
              "type": "boolean",
              "schema": [
                "false",
                "true"
              ]
            }
          ]
        }
      }
    }
  },
  {
    "name": "as",
    "type": "APrimitiveAsTag | Component | undefined",
    "description": "The element or component this component should render as.",
    "schema": {
      "kind": "enum",
      "type": "APrimitiveAsTag | Component | undefined",
      "schema": {
        "0": "undefined",
        "1": "'a'",
        "2": "'button'",
        "3": "'div'",
        "4": "'form'",
        "5": "'h2'",
        "6": "'h3'",
        "7": "'img'",
        "8": "'input'",
        "9": "'label'",
        "10": "'li'",
        "11": "'nav'",
        "12": "'ol'",
        "13": "'p'",
        "14": "'span'",
        "15": "'svg'",
        "16": "'template'",
        "17": "'ul'",
        "18": {
          "kind": "object",
          "type": "string & {}",
          "schema": {}
        },
        "19": {
          "kind": "object",
          "type": "ComponentOptions<any, any, any, ComputedOptions, MethodOptions, any, any, any, string, {}, {}, string, {}, {}, {}, string, ComponentProvideOptions>",
          "schema": {
            "beforeRouteEnter": {
              "name": "beforeRouteEnter",
              "global": false,
              "description": "Guard called when the router is navigating to the route that is rendering\nthis component from a different route. Differently from `beforeRouteUpdate`\nand `beforeRouteLeave`, `beforeRouteEnter` does not have access to the\ncomponent instance through `this` because it triggers before the component\nis even mounted.",
              "tags": [
                {
                  "name": "param",
                  "text": "to - RouteLocationRaw we are navigating to"
                },
                {
                  "name": "param",
                  "text": "from - RouteLocationRaw we are navigating from"
                },
                {
                  "name": "param",
                  "text": "next - function to validate, cancel or modify (by redirecting) the\nnavigation"
                }
              ],
              "required": false,
              "type": "NavigationGuardWithThis<undefined> | undefined",
              "schema": {
                "kind": "enum",
                "type": "NavigationGuardWithThis<undefined> | undefined",
                "schema": {
                  "0": "undefined",
                  "1": {
                    "kind": "event",
                    "type": "(this: undefined, to: RouteLocationNormalizedGeneric, from: RouteLocationNormalizedLoadedGeneric, next: NavigationGuardNext): _Awaitable<...>",
                    "schema": []
                  }
                }
              }
            },
            "beforeRouteUpdate": {
              "name": "beforeRouteUpdate",
              "global": false,
              "description": "Guard called whenever the route that renders this component has changed, but\nit is reused for the new route. This allows you to guard for changes in\nparams, the query or the hash.",
              "tags": [
                {
                  "name": "param",
                  "text": "to - RouteLocationRaw we are navigating to"
                },
                {
                  "name": "param",
                  "text": "from - RouteLocationRaw we are navigating from"
                },
                {
                  "name": "param",
                  "text": "next - function to validate, cancel or modify (by redirecting) the\nnavigation"
                }
              ],
              "required": false,
              "type": "NavigationGuard | undefined",
              "schema": {
                "kind": "enum",
                "type": "NavigationGuard | undefined",
                "schema": {
                  "0": "undefined",
                  "1": {
                    "kind": "event",
                    "type": "(to: RouteLocationNormalizedGeneric, from: RouteLocationNormalizedLoadedGeneric, next: NavigationGuardNext): _Awaitable<...>",
                    "schema": []
                  }
                }
              }
            },
            "beforeRouteLeave": {
              "name": "beforeRouteLeave",
              "global": false,
              "description": "Guard called when the router is navigating away from the current route that\nis rendering this component.",
              "tags": [
                {
                  "name": "param",
                  "text": "to - RouteLocationRaw we are navigating to"
                },
                {
                  "name": "param",
                  "text": "from - RouteLocationRaw we are navigating from"
                },
                {
                  "name": "param",
                  "text": "next - function to validate, cancel or modify (by redirecting) the\nnavigation"
                }
              ],
              "required": false,
              "type": "NavigationGuard | undefined",
              "schema": "NavigationGuard | undefined"
            },
            "head": {
              "name": "head",
              "global": false,
              "description": "Available exclusively for `defineNuxtComponent`.\nIt will not be executed when using `defineComponent`.",
              "tags": [],
              "required": false,
              "type": "((nuxtApp: NuxtApp) => U<Deprecated>) | undefined",
              "schema": {
                "kind": "enum",
                "type": "((nuxtApp: NuxtApp) => U<Deprecated>) | undefined",
                "schema": {
                  "0": "undefined",
                  "1": {
                    "kind": "event",
                    "type": "(nuxtApp: NuxtApp): UseHeadInput<Deprecated>",
                    "schema": []
                  }
                }
              }
            }
          }
        },
        "20": {
          "kind": "event",
          "type": "(props: any, ctx: Omit<{ attrs: Data; slots: Readonly<InternalSlots>; emit: (event: string, ...args: any[]) => void; expose: <Exposed extends Record<string, any> = Record<string, any>>(exposed?: Exposed | undefined) => void; }, 'expose'>): any",
          "schema": []
        },
        "21": {
          "kind": "object",
          "type": "ComponentPublicInstanceConstructor<any, any, any, any, ComputedOptions, MethodOptions>",
          "schema": {}
        }
      }
    }
  },
  {
    "name": "class",
    "type": "any",
    "description": "",
    "schema": "any"
  },
  {
    "name": "pohon",
    "type": "{ root?: ClassValue; base?: ClassValue; container?: ClassValue; thumb?: ClassValue; icon?: ClassValue; wrapper?: ClassValue; label?: ClassValue; description?: ClassValue; } | undefined",
    "description": "",
    "schema": {
      "kind": "enum",
      "type": "{ root?: ClassValue; base?: ClassValue; container?: ClassValue; thumb?: ClassValue; icon?: ClassValue; wrapper?: ClassValue; label?: ClassValue; description?: ClassValue; } | undefined",
      "schema": {
        "0": "undefined",
        "1": "{ root?: ClassValue; base?: ClassValue; container?: ClassValue; thumb?: ClassValue; icon?: ClassValue; wrapper?: ClassValue; label?: ClassValue; description?: ClassValue; }"
      }
    }
  },
  {
    "name": "label",
    "type": "string | undefined",
    "description": "",
    "schema": {
      "kind": "enum",
      "type": "string | undefined",
      "schema": {
        "0": "undefined",
        "1": "string"
      }
    }
  },
  {
    "name": "name",
    "type": "string | undefined",
    "description": "The name of the field. Submitted with its owning form as part of a name/value pair.",
    "schema": {
      "kind": "enum",
      "type": "string | undefined",
      "schema": {
        "0": "undefined",
        "1": "string"
      }
    }
  },
  {
    "name": "description",
    "type": "string | undefined",
    "description": "",
    "schema": {
      "kind": "enum",
      "type": "string | undefined",
      "schema": {
        "0": "undefined",
        "1": "string"
      }
    }
  },
  {
    "name": "value",
    "type": "string | undefined",
    "description": "The value given as data when submitted with a `name`.",
    "schema": {
      "kind": "enum",
      "type": "string | undefined",
      "schema": {
        "0": "undefined",
        "1": "string"
      }
    }
  },
  {
    "name": "size",
    "type": "'md' | 'xs' | 'sm' | 'lg' | 'xl' | undefined",
    "description": "",
    "schema": {
      "kind": "enum",
      "type": "'md' | 'xs' | 'sm' | 'lg' | 'xl' | undefined",
      "schema": {
        "0": "undefined",
        "1": "'md'",
        "2": "'xs'",
        "3": "'sm'",
        "4": "'lg'",
        "5": "'xl'"
      }
    }
  },
  {
    "name": "color",
    "type": "'error' | 'primary' | 'secondary' | 'success' | 'info' | 'warning' | 'neutral' | undefined",
    "description": "",
    "schema": {
      "kind": "enum",
      "type": "'error' | 'primary' | 'secondary' | 'success' | 'info' | 'warning' | 'neutral' | undefined",
      "schema": {
        "0": "undefined",
        "1": "'error'",
        "2": "'primary'",
        "3": "'secondary'",
        "4": "'success'",
        "5": "'info'",
        "6": "'warning'",
        "7": "'neutral'"
      }
    }
  },
  {
    "name": "loading",
    "type": "boolean | undefined",
    "description": "When `true`, the loading icon will be displayed.",
    "schema": {
      "kind": "enum",
      "type": "boolean | undefined",
      "schema": {
        "0": "undefined",
        "1": "false",
        "2": "true"
      }
    }
  },
  {
    "name": "loadingIcon",
    "type": "string | object | undefined",
    "description": "The icon when the `loading` prop is `true`.",
    "schema": {
      "kind": "enum",
      "type": "string | object | undefined",
      "schema": {
        "0": "undefined",
        "1": "string",
        "2": "object"
      }
    }
  },
  {
    "name": "onChange",
    "type": "((event: Event) => any) | undefined",
    "description": "",
    "schema": {
      "kind": "enum",
      "type": "((event: Event) => any) | undefined",
      "schema": {
        "0": "undefined",
        "1": {
          "kind": "event",
          "type": "(event: Event): any",
          "schema": [
            {
              "kind": "object",
              "type": "Event",
              "schema": {}
            }
          ]
        }
      }
    }
  },
  {
    "name": "id",
    "type": "string | undefined",
    "description": "",
    "schema": {
      "kind": "enum",
      "type": "string | undefined",
      "schema": {
        "0": "undefined",
        "1": "string"
      }
    }
  },
  {
    "name": "required",
    "type": "boolean | undefined",
    "description": "When `true`, indicates that the user must set the value before the owning form can be submitted.",
    "schema": {
      "kind": "enum",
      "type": "boolean | undefined",
      "schema": {
        "0": "undefined",
        "1": "false",
        "2": "true"
      }
    }
  },
  {
    "name": "checkedIcon",
    "type": "string | object | undefined",
    "description": "Display an icon when the switch is checked.",
    "schema": {
      "kind": "enum",
      "type": "string | object | undefined",
      "schema": {
        "0": "undefined",
        "1": "string",
        "2": "object"
      }
    }
  },
  {
    "name": "uncheckedIcon",
    "type": "string | object | undefined",
    "description": "Display an icon when the switch is unchecked.",
    "schema": {
      "kind": "enum",
      "type": "string | object | undefined",
      "schema": {
        "0": "undefined",
        "1": "string",
        "2": "object"
      }
    }
  }
]
}
