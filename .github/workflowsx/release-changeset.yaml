name: Release

on:
  push:
    branches:
      - main

concurrency: ${{ github.workflow }}-${{ github.ref }}

permissions:
  contents: write
  pull-requests: write
  id-token: write

jobs:
  release:
    name: Release
    runs-on: ubuntu-latest
    steps:
      - name: Checkout Repo
        uses: actions/checkout@v5
        with:
          # This makes Actions fetch all Git history so that Changesets can generate changelogs with the correct commits
          fetch-depth: 0

      - name: Setup (Install node & pnpm)
        uses: ./.github/actions/setup

      - name: Build packages
        run: pnpm build

      - name: Create Release Pull Request or Publish to npm
        id: changesets
        uses: changesets/action@v1
        with:
          # This expects you to have a script called release which does a build for your packages and calls changeset publish
          publish: pnpm release
          title: 'chore: version packages'
          commit: 'chore: version packages'
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
          NPM_TOKEN: ${{ secrets.VINICUNCA_NPM_TOKEN }}
          # Required for provenance https://docs.npmjs.com/generating-provenance-statements
          NODE_AUTH_TOKEN: ${{ secrets.VINICUNCA_NPM_TOKEN }}

      - name: Create GitHub Releases
        if: steps.changesets.outputs.published == 'true'
        run: |
          for package in $(echo '${{ steps.changesets.outputs.publishedPackages }}' | jq -r '.[] | @base64'); do
            _jq() {
              echo ${package} | base64 --decode | jq -r ${1}
            }
            PACKAGE_NAME=$(_jq '.name')
            PACKAGE_VERSION=$(_jq '.version')

            echo "Creating release for ${PACKAGE_NAME}@${PACKAGE_VERSION}"

            # Create a tag for the release
            git tag "${PACKAGE_NAME}@${PACKAGE_VERSION}"
            git push origin "${PACKAGE_NAME}@${PACKAGE_VERSION}"

            # Generate changelog for this specific package
            gh release create "${PACKAGE_NAME}@${PACKAGE_VERSION}" \
              --title "${PACKAGE_NAME}@${PACKAGE_VERSION}" \
              --generate-notes \
              --notes "Release ${PACKAGE_NAME} version ${PACKAGE_VERSION}"
          done
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
